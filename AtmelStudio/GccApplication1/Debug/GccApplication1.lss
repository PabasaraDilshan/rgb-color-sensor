
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000fa  00800100  00000fd4  00001068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fd4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  008001fa  008001fa  00001162  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001162  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001194  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  000011d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001594  00000000  00000000  00001294  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008db  00000000  00000000  00002828  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009ac  00000000  00000000  00003103  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000270  00000000  00000000  00003ab0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ff  00000000  00000000  00003d20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ded  00000000  00000000  0000421f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  0000500c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ed       	ldi	r30, 0xD4	; 212
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 3f       	cpi	r26, 0xFA	; 250
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	aa ef       	ldi	r26, 0xFA	; 250
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 31       	cpi	r26, 0x16	; 22
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <main>
  9e:	0c 94 e8 07 	jmp	0xfd0	; 0xfd0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcd4command>:
		case 5:
			
			OCR0B = value;
			break;
		case 3:
			OCR2B = value;
  a6:	48 b1       	in	r20, 0x08	; 8
  a8:	9c 01       	movw	r18, r24
  aa:	20 7f       	andi	r18, 0xF0	; 240
  ac:	33 27       	eor	r19, r19
  ae:	35 95       	asr	r19
  b0:	27 95       	ror	r18
  b2:	35 95       	asr	r19
  b4:	27 95       	ror	r18
  b6:	35 95       	asr	r19
  b8:	27 95       	ror	r18
  ba:	35 95       	asr	r19
  bc:	27 95       	ror	r18
  be:	94 2f       	mov	r25, r20
  c0:	90 7f       	andi	r25, 0xF0	; 240
  c2:	29 2b       	or	r18, r25
  c4:	28 b9       	out	0x08, r18	; 8
  c6:	58 98       	cbi	0x0b, 0	; 11
  c8:	59 98       	cbi	0x0b, 1	; 11
  ca:	5a 9a       	sbi	0x0b, 2	; 11
  cc:	22 e0       	ldi	r18, 0x02	; 2
  ce:	2a 95       	dec	r18
  d0:	f1 f7       	brne	.-4      	; 0xce <lcd4command+0x28>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <lcd4command+0x2e>
  d4:	5a 98       	cbi	0x0b, 2	; 11
  d6:	e7 ec       	ldi	r30, 0xC7	; 199
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	31 97       	sbiw	r30, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <lcd4command+0x34>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <lcd4command+0x3a>
  e0:	00 00       	nop
  e2:	98 b1       	in	r25, 0x08	; 8
  e4:	90 7f       	andi	r25, 0xF0	; 240
  e6:	8f 70       	andi	r24, 0x0F	; 15
  e8:	89 2b       	or	r24, r25
  ea:	88 b9       	out	0x08, r24	; 8
  ec:	5a 9a       	sbi	0x0b, 2	; 11
  ee:	f2 e0       	ldi	r31, 0x02	; 2
  f0:	fa 95       	dec	r31
  f2:	f1 f7       	brne	.-4      	; 0xf0 <lcd4command+0x4a>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <lcd4command+0x50>
  f6:	5a 98       	cbi	0x0b, 2	; 11
  f8:	87 ec       	ldi	r24, 0xC7	; 199
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <lcd4command+0x56>
 100:	00 c0       	rjmp	.+0      	; 0x102 <lcd4command+0x5c>
 102:	00 00       	nop
 104:	ef e9       	ldi	r30, 0x9F	; 159
 106:	ff e0       	ldi	r31, 0x0F	; 15
 108:	31 97       	sbiw	r30, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <lcd4command+0x62>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <lcd4command+0x68>
 10e:	00 00       	nop
 110:	08 95       	ret

00000112 <lcd4init>:
 112:	87 b1       	in	r24, 0x07	; 7
 114:	8f 60       	ori	r24, 0x0F	; 15
 116:	87 b9       	out	0x07, r24	; 7
 118:	8a b1       	in	r24, 0x0a	; 10
 11a:	87 60       	ori	r24, 0x07	; 7
 11c:	8a b9       	out	0x0a, r24	; 10
 11e:	5a 98       	cbi	0x0b, 2	; 11
 120:	8f e9       	ldi	r24, 0x9F	; 159
 122:	9f e0       	ldi	r25, 0x0F	; 15
 124:	01 97       	sbiw	r24, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <lcd4init+0x12>
 128:	00 c0       	rjmp	.+0      	; 0x12a <lcd4init+0x18>
 12a:	00 00       	nop
 12c:	83 e3       	ldi	r24, 0x33	; 51
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd4command>
 134:	82 e3       	ldi	r24, 0x32	; 50
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd4command>
 13c:	88 e2       	ldi	r24, 0x28	; 40
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd4command>
 144:	8e e0       	ldi	r24, 0x0E	; 14
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd4command>
 14c:	86 e0       	ldi	r24, 0x06	; 6
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd4command>
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd4command>
 15c:	08 95       	ret

0000015e <lcd4data>:
 15e:	48 b1       	in	r20, 0x08	; 8
 160:	9c 01       	movw	r18, r24
 162:	20 7f       	andi	r18, 0xF0	; 240
 164:	33 27       	eor	r19, r19
 166:	35 95       	asr	r19
 168:	27 95       	ror	r18
 16a:	35 95       	asr	r19
 16c:	27 95       	ror	r18
 16e:	35 95       	asr	r19
 170:	27 95       	ror	r18
 172:	35 95       	asr	r19
 174:	27 95       	ror	r18
 176:	94 2f       	mov	r25, r20
 178:	90 7f       	andi	r25, 0xF0	; 240
 17a:	29 2b       	or	r18, r25
 17c:	28 b9       	out	0x08, r18	; 8
 17e:	58 9a       	sbi	0x0b, 0	; 11
 180:	59 98       	cbi	0x0b, 1	; 11
 182:	5a 9a       	sbi	0x0b, 2	; 11
 184:	22 e0       	ldi	r18, 0x02	; 2
 186:	2a 95       	dec	r18
 188:	f1 f7       	brne	.-4      	; 0x186 <lcd4data+0x28>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <lcd4data+0x2e>
 18c:	5a 98       	cbi	0x0b, 2	; 11
 18e:	e7 ec       	ldi	r30, 0xC7	; 199
 190:	f0 e0       	ldi	r31, 0x00	; 0
 192:	31 97       	sbiw	r30, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <lcd4data+0x34>
 196:	00 c0       	rjmp	.+0      	; 0x198 <lcd4data+0x3a>
 198:	00 00       	nop
 19a:	98 b1       	in	r25, 0x08	; 8
 19c:	90 7f       	andi	r25, 0xF0	; 240
 19e:	8f 70       	andi	r24, 0x0F	; 15
 1a0:	89 2b       	or	r24, r25
 1a2:	88 b9       	out	0x08, r24	; 8
 1a4:	5a 9a       	sbi	0x0b, 2	; 11
 1a6:	f2 e0       	ldi	r31, 0x02	; 2
 1a8:	fa 95       	dec	r31
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <lcd4data+0x4a>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <lcd4data+0x50>
 1ae:	5a 98       	cbi	0x0b, 2	; 11
 1b0:	87 ec       	ldi	r24, 0xC7	; 199
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	01 97       	sbiw	r24, 0x01	; 1
 1b6:	f1 f7       	brne	.-4      	; 0x1b4 <lcd4data+0x56>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <lcd4data+0x5c>
 1ba:	00 00       	nop
 1bc:	ef e9       	ldi	r30, 0x9F	; 159
 1be:	ff e0       	ldi	r31, 0x0F	; 15
 1c0:	31 97       	sbiw	r30, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <lcd4data+0x62>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <lcd4data+0x68>
 1c6:	00 00       	nop
 1c8:	08 95       	ret

000001ca <lcd4print>:
 1ca:	cf 93       	push	r28
 1cc:	df 93       	push	r29
 1ce:	ec 01       	movw	r28, r24
 1d0:	88 81       	ld	r24, Y
 1d2:	88 23       	and	r24, r24
 1d4:	39 f0       	breq	.+14     	; 0x1e4 <lcd4print+0x1a>
 1d6:	21 96       	adiw	r28, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	0e 94 af 00 	call	0x15e	; 0x15e <lcd4data>
 1de:	89 91       	ld	r24, Y+
 1e0:	81 11       	cpse	r24, r1
 1e2:	fa cf       	rjmp	.-12     	; 0x1d8 <lcd4print+0xe>
 1e4:	df 91       	pop	r29
 1e6:	cf 91       	pop	r28
 1e8:	08 95       	ret

000001ea <lcd4printlen>:
 1ea:	0f 93       	push	r16
 1ec:	1f 93       	push	r17
 1ee:	cf 93       	push	r28
 1f0:	df 93       	push	r29
 1f2:	61 15       	cp	r22, r1
 1f4:	71 05       	cpc	r23, r1
 1f6:	59 f0       	breq	.+22     	; 0x20e <lcd4printlen+0x24>
 1f8:	8c 01       	movw	r16, r24
 1fa:	ec 01       	movw	r28, r24
 1fc:	06 0f       	add	r16, r22
 1fe:	17 1f       	adc	r17, r23
 200:	89 91       	ld	r24, Y+
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	0e 94 af 00 	call	0x15e	; 0x15e <lcd4data>
 208:	c0 17       	cp	r28, r16
 20a:	d1 07       	cpc	r29, r17
 20c:	c9 f7       	brne	.-14     	; 0x200 <lcd4printlen+0x16>
 20e:	df 91       	pop	r29
 210:	cf 91       	pop	r28
 212:	1f 91       	pop	r17
 214:	0f 91       	pop	r16
 216:	08 95       	ret

00000218 <lcd4clr>:
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd4command>
 220:	08 95       	ret

00000222 <gotoNewline>:
 222:	80 ec       	ldi	r24, 0xC0	; 192
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd4command>
 22a:	08 95       	ret

0000022c <initAdc>:
 22c:	ec e7       	ldi	r30, 0x7C	; 124
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	80 81       	ld	r24, Z
 232:	80 64       	ori	r24, 0x40	; 64
 234:	80 83       	st	Z, r24
 236:	ea e7       	ldi	r30, 0x7A	; 122
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	80 81       	ld	r24, Z
 23c:	87 68       	ori	r24, 0x87	; 135
 23e:	80 83       	st	Z, r24
 240:	08 95       	ret

00000242 <readAdc>:
 242:	ec e7       	ldi	r30, 0x7C	; 124
 244:	f0 e0       	ldi	r31, 0x00	; 0
 246:	90 81       	ld	r25, Z
 248:	90 7f       	andi	r25, 0xF0	; 240
 24a:	8f 70       	andi	r24, 0x0F	; 15
 24c:	89 2b       	or	r24, r25
 24e:	80 83       	st	Z, r24
 250:	ea e7       	ldi	r30, 0x7A	; 122
 252:	f0 e0       	ldi	r31, 0x00	; 0
 254:	80 81       	ld	r24, Z
 256:	80 64       	ori	r24, 0x40	; 64
 258:	80 83       	st	Z, r24
 25a:	80 81       	ld	r24, Z
 25c:	86 fd       	sbrc	r24, 6
 25e:	fd cf       	rjmp	.-6      	; 0x25a <readAdc+0x18>
 260:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 264:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 268:	08 95       	ret

0000026a <itos>:
 26a:	0f 93       	push	r16
 26c:	1f 93       	push	r17
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	ec 01       	movw	r28, r24
 274:	8a 30       	cpi	r24, 0x0A	; 10
 276:	91 05       	cpc	r25, r1
 278:	6c f4       	brge	.+26     	; 0x294 <itos+0x2a>
 27a:	00 91 fa 01 	lds	r16, 0x01FA	; 0x8001fa <__data_end>
 27e:	10 91 fb 01 	lds	r17, 0x01FB	; 0x8001fb <__data_end+0x1>
 282:	c8 01       	movw	r24, r16
 284:	0e 94 c7 06 	call	0xd8e	; 0xd8e <malloc>
 288:	fc 01       	movw	r30, r24
 28a:	e0 0f       	add	r30, r16
 28c:	f1 1f       	adc	r31, r17
 28e:	c0 5d       	subi	r28, 0xD0	; 208
 290:	c0 83       	st	Z, r28
 292:	15 c0       	rjmp	.+42     	; 0x2be <itos+0x54>
 294:	9b 01       	movw	r18, r22
 296:	2f 5f       	subi	r18, 0xFF	; 255
 298:	3f 4f       	sbci	r19, 0xFF	; 255
 29a:	6a e0       	ldi	r22, 0x0A	; 10
 29c:	70 e0       	ldi	r23, 0x00	; 0
 29e:	0e 94 9f 06 	call	0xd3e	; 0xd3e <__divmodhi4>
 2a2:	ab 01       	movw	r20, r22
 2a4:	c8 2f       	mov	r28, r24
 2a6:	b9 01       	movw	r22, r18
 2a8:	ca 01       	movw	r24, r20
 2aa:	0e 94 35 01 	call	0x26a	; 0x26a <itos>
 2ae:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <__data_end>
 2b2:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <__data_end+0x1>
 2b6:	e8 0f       	add	r30, r24
 2b8:	f9 1f       	adc	r31, r25
 2ba:	c0 5d       	subi	r28, 0xD0	; 208
 2bc:	c0 83       	st	Z, r28
 2be:	20 91 fa 01 	lds	r18, 0x01FA	; 0x8001fa <__data_end>
 2c2:	30 91 fb 01 	lds	r19, 0x01FB	; 0x8001fb <__data_end+0x1>
 2c6:	2f 5f       	subi	r18, 0xFF	; 255
 2c8:	3f 4f       	sbci	r19, 0xFF	; 255
 2ca:	30 93 fb 01 	sts	0x01FB, r19	; 0x8001fb <__data_end+0x1>
 2ce:	20 93 fa 01 	sts	0x01FA, r18	; 0x8001fa <__data_end>
 2d2:	df 91       	pop	r29
 2d4:	cf 91       	pop	r28
 2d6:	1f 91       	pop	r17
 2d8:	0f 91       	pop	r16
 2da:	08 95       	ret

000002dc <intos>:
 2dc:	61 e0       	ldi	r22, 0x01	; 1
 2de:	70 e0       	ldi	r23, 0x00	; 0
 2e0:	0e 94 35 01 	call	0x26a	; 0x26a <itos>
 2e4:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <__data_end+0x1>
 2e8:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <__data_end>
 2ec:	08 95       	ret

000002ee <readingtorgb>:
 2ee:	2f 92       	push	r2
 2f0:	3f 92       	push	r3
 2f2:	4f 92       	push	r4
 2f4:	5f 92       	push	r5
 2f6:	6f 92       	push	r6
 2f8:	7f 92       	push	r7
 2fa:	8f 92       	push	r8
 2fc:	9f 92       	push	r9
 2fe:	af 92       	push	r10
 300:	bf 92       	push	r11
 302:	cf 92       	push	r12
 304:	df 92       	push	r13
 306:	ef 92       	push	r14
 308:	ff 92       	push	r15
 30a:	0f 93       	push	r16
 30c:	1f 93       	push	r17
 30e:	cf 93       	push	r28
 310:	df 93       	push	r29
 312:	cd b7       	in	r28, 0x3d	; 61
 314:	de b7       	in	r29, 0x3e	; 62
 316:	e0 97       	sbiw	r28, 0x30	; 48
 318:	0f b6       	in	r0, 0x3f	; 63
 31a:	f8 94       	cli
 31c:	de bf       	out	0x3e, r29	; 62
 31e:	0f be       	out	0x3f, r0	; 63
 320:	cd bf       	out	0x3d, r28	; 61
 322:	2b 01       	movw	r4, r22
 324:	3c 01       	movw	r6, r24
 326:	49 01       	movw	r8, r18
 328:	5a 01       	movw	r10, r20
 32a:	67 01       	movw	r12, r14
 32c:	78 01       	movw	r14, r16
 32e:	80 e0       	ldi	r24, 0x00	; 0
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	a0 e8       	ldi	r26, 0x80	; 128
 334:	bf e3       	ldi	r27, 0x3F	; 63
 336:	89 83       	std	Y+1, r24	; 0x01
 338:	9a 83       	std	Y+2, r25	; 0x02
 33a:	ab 83       	std	Y+3, r26	; 0x03
 33c:	bc 83       	std	Y+4, r27	; 0x04
 33e:	4d 82       	std	Y+5, r4	; 0x05
 340:	5e 82       	std	Y+6, r5	; 0x06
 342:	6f 82       	std	Y+7, r6	; 0x07
 344:	78 86       	std	Y+8, r7	; 0x08
 346:	c9 86       	std	Y+9, r12	; 0x09
 348:	da 86       	std	Y+10, r13	; 0x0a
 34a:	eb 86       	std	Y+11, r14	; 0x0b
 34c:	fc 86       	std	Y+12, r15	; 0x0c
 34e:	2d 87       	std	Y+13, r18	; 0x0d
 350:	3e 87       	std	Y+14, r19	; 0x0e
 352:	4f 87       	std	Y+15, r20	; 0x0f
 354:	58 8b       	std	Y+16, r21	; 0x10
 356:	a3 01       	movw	r20, r6
 358:	92 01       	movw	r18, r4
 35a:	c3 01       	movw	r24, r6
 35c:	b2 01       	movw	r22, r4
 35e:	0e 94 32 06 	call	0xc64	; 0xc64 <__mulsf3>
 362:	69 8b       	std	Y+17, r22	; 0x11
 364:	7a 8b       	std	Y+18, r23	; 0x12
 366:	8b 8b       	std	Y+19, r24	; 0x13
 368:	9c 8b       	std	Y+20, r25	; 0x14
 36a:	a7 01       	movw	r20, r14
 36c:	96 01       	movw	r18, r12
 36e:	c7 01       	movw	r24, r14
 370:	b6 01       	movw	r22, r12
 372:	0e 94 32 06 	call	0xc64	; 0xc64 <__mulsf3>
 376:	6d 8b       	std	Y+21, r22	; 0x15
 378:	7e 8b       	std	Y+22, r23	; 0x16
 37a:	8f 8b       	std	Y+23, r24	; 0x17
 37c:	98 8f       	std	Y+24, r25	; 0x18
 37e:	a5 01       	movw	r20, r10
 380:	94 01       	movw	r18, r8
 382:	c5 01       	movw	r24, r10
 384:	b4 01       	movw	r22, r8
 386:	0e 94 32 06 	call	0xc64	; 0xc64 <__mulsf3>
 38a:	69 8f       	std	Y+25, r22	; 0x19
 38c:	7a 8f       	std	Y+26, r23	; 0x1a
 38e:	8b 8f       	std	Y+27, r24	; 0x1b
 390:	9c 8f       	std	Y+28, r25	; 0x1c
 392:	a7 01       	movw	r20, r14
 394:	96 01       	movw	r18, r12
 396:	c3 01       	movw	r24, r6
 398:	b2 01       	movw	r22, r4
 39a:	0e 94 32 06 	call	0xc64	; 0xc64 <__mulsf3>
 39e:	6d a7       	std	Y+45, r22	; 0x2d
 3a0:	7e a7       	std	Y+46, r23	; 0x2e
 3a2:	8f a7       	std	Y+47, r24	; 0x2f
 3a4:	98 ab       	std	Y+48, r25	; 0x30
 3a6:	9b 01       	movw	r18, r22
 3a8:	ac 01       	movw	r20, r24
 3aa:	c5 01       	movw	r24, r10
 3ac:	b4 01       	movw	r22, r8
 3ae:	0e 94 32 06 	call	0xc64	; 0xc64 <__mulsf3>
 3b2:	6d 8f       	std	Y+29, r22	; 0x1d
 3b4:	7e 8f       	std	Y+30, r23	; 0x1e
 3b6:	8f 8f       	std	Y+31, r24	; 0x1f
 3b8:	98 a3       	std	Y+32, r25	; 0x20
 3ba:	8d a5       	ldd	r24, Y+45	; 0x2d
 3bc:	9e a5       	ldd	r25, Y+46	; 0x2e
 3be:	af a5       	ldd	r26, Y+47	; 0x2f
 3c0:	b8 a9       	ldd	r27, Y+48	; 0x30
 3c2:	89 a3       	std	Y+33, r24	; 0x21
 3c4:	9a a3       	std	Y+34, r25	; 0x22
 3c6:	ab a3       	std	Y+35, r26	; 0x23
 3c8:	bc a3       	std	Y+36, r27	; 0x24
 3ca:	a5 01       	movw	r20, r10
 3cc:	94 01       	movw	r18, r8
 3ce:	c3 01       	movw	r24, r6
 3d0:	b2 01       	movw	r22, r4
 3d2:	0e 94 32 06 	call	0xc64	; 0xc64 <__mulsf3>
 3d6:	6d a3       	std	Y+37, r22	; 0x25
 3d8:	7e a3       	std	Y+38, r23	; 0x26
 3da:	8f a3       	std	Y+39, r24	; 0x27
 3dc:	98 a7       	std	Y+40, r25	; 0x28
 3de:	a5 01       	movw	r20, r10
 3e0:	94 01       	movw	r18, r8
 3e2:	c7 01       	movw	r24, r14
 3e4:	b6 01       	movw	r22, r12
 3e6:	0e 94 32 06 	call	0xc64	; 0xc64 <__mulsf3>
 3ea:	69 a7       	std	Y+41, r22	; 0x29
 3ec:	7a a7       	std	Y+42, r23	; 0x2a
 3ee:	8b a7       	std	Y+43, r24	; 0x2b
 3f0:	9c a7       	std	Y+44, r25	; 0x2c
 3f2:	0f 2e       	mov	r0, r31
 3f4:	f2 e1       	ldi	r31, 0x12	; 18
 3f6:	ef 2e       	mov	r14, r31
 3f8:	f1 e0       	ldi	r31, 0x01	; 1
 3fa:	ff 2e       	mov	r15, r31
 3fc:	f0 2d       	mov	r31, r0
 3fe:	de 01       	movw	r26, r28
 400:	11 96       	adiw	r26, 0x01	; 1
 402:	6d 01       	movw	r12, r26
 404:	0e e3       	ldi	r16, 0x3E	; 62
 406:	11 e0       	ldi	r17, 0x01	; 1
 408:	3d 01       	movw	r6, r26
 40a:	81 2c       	mov	r8, r1
 40c:	91 2c       	mov	r9, r1
 40e:	54 01       	movw	r10, r8
 410:	f7 01       	movw	r30, r14
 412:	61 91       	ld	r22, Z+
 414:	71 91       	ld	r23, Z+
 416:	81 91       	ld	r24, Z+
 418:	91 91       	ld	r25, Z+
 41a:	7f 01       	movw	r14, r30
 41c:	d3 01       	movw	r26, r6
 41e:	2d 91       	ld	r18, X+
 420:	3d 91       	ld	r19, X+
 422:	4d 91       	ld	r20, X+
 424:	5d 91       	ld	r21, X+
 426:	3d 01       	movw	r6, r26
 428:	0e 94 32 06 	call	0xc64	; 0xc64 <__mulsf3>
 42c:	9b 01       	movw	r18, r22
 42e:	ac 01       	movw	r20, r24
 430:	c5 01       	movw	r24, r10
 432:	b4 01       	movw	r22, r8
 434:	0e 94 02 05 	call	0xa04	; 0xa04 <__addsf3>
 438:	4b 01       	movw	r8, r22
 43a:	5c 01       	movw	r10, r24
 43c:	e0 16       	cp	r14, r16
 43e:	f1 06       	cpc	r15, r17
 440:	39 f7       	brne	.-50     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 442:	0f 2e       	mov	r0, r31
 444:	fa e6       	ldi	r31, 0x6A	; 106
 446:	ef 2e       	mov	r14, r31
 448:	f1 e0       	ldi	r31, 0x01	; 1
 44a:	ff 2e       	mov	r15, r31
 44c:	f0 2d       	mov	r31, r0
 44e:	16 01       	movw	r2, r12
 450:	41 2c       	mov	r4, r1
 452:	51 2c       	mov	r5, r1
 454:	32 01       	movw	r6, r4
 456:	f8 01       	movw	r30, r16
 458:	61 91       	ld	r22, Z+
 45a:	71 91       	ld	r23, Z+
 45c:	81 91       	ld	r24, Z+
 45e:	91 91       	ld	r25, Z+
 460:	8f 01       	movw	r16, r30
 462:	d1 01       	movw	r26, r2
 464:	2d 91       	ld	r18, X+
 466:	3d 91       	ld	r19, X+
 468:	4d 91       	ld	r20, X+
 46a:	5d 91       	ld	r21, X+
 46c:	1d 01       	movw	r2, r26
 46e:	0e 94 32 06 	call	0xc64	; 0xc64 <__mulsf3>
 472:	9b 01       	movw	r18, r22
 474:	ac 01       	movw	r20, r24
 476:	c3 01       	movw	r24, r6
 478:	b2 01       	movw	r22, r4
 47a:	0e 94 02 05 	call	0xa04	; 0xa04 <__addsf3>
 47e:	2b 01       	movw	r4, r22
 480:	3c 01       	movw	r6, r24
 482:	0e 15       	cp	r16, r14
 484:	1f 05       	cpc	r17, r15
 486:	39 f7       	brne	.-50     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 488:	06 e9       	ldi	r16, 0x96	; 150
 48a:	11 e0       	ldi	r17, 0x01	; 1
 48c:	1d a6       	std	Y+45, r1	; 0x2d
 48e:	1e a6       	std	Y+46, r1	; 0x2e
 490:	1f a6       	std	Y+47, r1	; 0x2f
 492:	18 aa       	std	Y+48, r1	; 0x30
 494:	f7 01       	movw	r30, r14
 496:	61 91       	ld	r22, Z+
 498:	71 91       	ld	r23, Z+
 49a:	81 91       	ld	r24, Z+
 49c:	91 91       	ld	r25, Z+
 49e:	7f 01       	movw	r14, r30
 4a0:	d6 01       	movw	r26, r12
 4a2:	2d 91       	ld	r18, X+
 4a4:	3d 91       	ld	r19, X+
 4a6:	4d 91       	ld	r20, X+
 4a8:	5d 91       	ld	r21, X+
 4aa:	6d 01       	movw	r12, r26
 4ac:	0e 94 32 06 	call	0xc64	; 0xc64 <__mulsf3>
 4b0:	9b 01       	movw	r18, r22
 4b2:	ac 01       	movw	r20, r24
 4b4:	6d a5       	ldd	r22, Y+45	; 0x2d
 4b6:	7e a5       	ldd	r23, Y+46	; 0x2e
 4b8:	8f a5       	ldd	r24, Y+47	; 0x2f
 4ba:	98 a9       	ldd	r25, Y+48	; 0x30
 4bc:	0e 94 02 05 	call	0xa04	; 0xa04 <__addsf3>
 4c0:	6d a7       	std	Y+45, r22	; 0x2d
 4c2:	7e a7       	std	Y+46, r23	; 0x2e
 4c4:	8f a7       	std	Y+47, r24	; 0x2f
 4c6:	98 ab       	std	Y+48, r25	; 0x30
 4c8:	e0 16       	cp	r14, r16
 4ca:	f1 06       	cpc	r15, r17
 4cc:	19 f7       	brne	.-58     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 4ce:	ec ef       	ldi	r30, 0xFC	; 252
 4d0:	f1 e0       	ldi	r31, 0x01	; 1
 4d2:	80 82       	st	Z, r8
 4d4:	91 82       	std	Z+1, r9	; 0x01
 4d6:	a2 82       	std	Z+2, r10	; 0x02
 4d8:	b3 82       	std	Z+3, r11	; 0x03
 4da:	44 82       	std	Z+4, r4	; 0x04
 4dc:	55 82       	std	Z+5, r5	; 0x05
 4de:	66 82       	std	Z+6, r6	; 0x06
 4e0:	77 82       	std	Z+7, r7	; 0x07
 4e2:	dc 01       	movw	r26, r24
 4e4:	cb 01       	movw	r24, r22
 4e6:	80 87       	std	Z+8, r24	; 0x08
 4e8:	91 87       	std	Z+9, r25	; 0x09
 4ea:	a2 87       	std	Z+10, r26	; 0x0a
 4ec:	b3 87       	std	Z+11, r27	; 0x0b
 4ee:	cf 01       	movw	r24, r30
 4f0:	e0 96       	adiw	r28, 0x30	; 48
 4f2:	0f b6       	in	r0, 0x3f	; 63
 4f4:	f8 94       	cli
 4f6:	de bf       	out	0x3e, r29	; 62
 4f8:	0f be       	out	0x3f, r0	; 63
 4fa:	cd bf       	out	0x3d, r28	; 61
 4fc:	df 91       	pop	r29
 4fe:	cf 91       	pop	r28
 500:	1f 91       	pop	r17
 502:	0f 91       	pop	r16
 504:	ff 90       	pop	r15
 506:	ef 90       	pop	r14
 508:	df 90       	pop	r13
 50a:	cf 90       	pop	r12
 50c:	bf 90       	pop	r11
 50e:	af 90       	pop	r10
 510:	9f 90       	pop	r9
 512:	8f 90       	pop	r8
 514:	7f 90       	pop	r7
 516:	6f 90       	pop	r6
 518:	5f 90       	pop	r5
 51a:	4f 90       	pop	r4
 51c:	3f 90       	pop	r3
 51e:	2f 90       	pop	r2
 520:	08 95       	ret

00000522 <initPwm>:
 522:	4a b1       	in	r20, 0x0a	; 10
 524:	21 e0       	ldi	r18, 0x01	; 1
 526:	30 e0       	ldi	r19, 0x00	; 0
 528:	08 2e       	mov	r0, r24
 52a:	02 c0       	rjmp	.+4      	; 0x530 <initPwm+0xe>
 52c:	22 0f       	add	r18, r18
 52e:	33 1f       	adc	r19, r19
 530:	0a 94       	dec	r0
 532:	e2 f7       	brpl	.-8      	; 0x52c <initPwm+0xa>
 534:	24 2b       	or	r18, r20
 536:	2a b9       	out	0x0a, r18	; 10
 538:	85 30       	cpi	r24, 0x05	; 5
 53a:	91 05       	cpc	r25, r1
 53c:	69 f0       	breq	.+26     	; 0x558 <initPwm+0x36>
 53e:	86 30       	cpi	r24, 0x06	; 6
 540:	91 05       	cpc	r25, r1
 542:	19 f0       	breq	.+6      	; 0x54a <initPwm+0x28>
 544:	03 97       	sbiw	r24, 0x03	; 3
 546:	c9 f4       	brne	.+50     	; 0x57a <initPwm+0x58>
 548:	0e c0       	rjmp	.+28     	; 0x566 <initPwm+0x44>
 54a:	84 b5       	in	r24, 0x24	; 36
 54c:	83 68       	ori	r24, 0x83	; 131
 54e:	84 bd       	out	0x24, r24	; 36
 550:	85 b5       	in	r24, 0x25	; 37
 552:	82 60       	ori	r24, 0x02	; 2
 554:	85 bd       	out	0x25, r24	; 37
 556:	08 95       	ret
 558:	84 b5       	in	r24, 0x24	; 36
 55a:	83 62       	ori	r24, 0x23	; 35
 55c:	84 bd       	out	0x24, r24	; 36
 55e:	85 b5       	in	r24, 0x25	; 37
 560:	82 60       	ori	r24, 0x02	; 2
 562:	85 bd       	out	0x25, r24	; 37
 564:	08 95       	ret
 566:	e0 eb       	ldi	r30, 0xB0	; 176
 568:	f0 e0       	ldi	r31, 0x00	; 0
 56a:	80 81       	ld	r24, Z
 56c:	83 62       	ori	r24, 0x23	; 35
 56e:	80 83       	st	Z, r24
 570:	e1 eb       	ldi	r30, 0xB1	; 177
 572:	f0 e0       	ldi	r31, 0x00	; 0
 574:	80 81       	ld	r24, Z
 576:	82 60       	ori	r24, 0x02	; 2
 578:	80 83       	st	Z, r24
 57a:	08 95       	ret

0000057c <initkey>:
#define KEY_PIN  PINB
#define KEY_PRT  PORTB
int col,row;
unsigned char keys[4][3] = {'1','2','3','4','5','6','7','8','9','*','0','#'};
void initkey(){
	KEY_DDR = 0x0F;
 57c:	8f e0       	ldi	r24, 0x0F	; 15
 57e:	84 b9       	out	0x04, r24	; 4
	KEY_PRT = 0xFF;
 580:	8f ef       	ldi	r24, 0xFF	; 255
 582:	85 b9       	out	0x05, r24	; 5
 584:	08 95       	ret

00000586 <waitforkey>:
char waitforkey(){
	

	do 
	{
		KEY_PRT &= 0x70;
 586:	85 b1       	in	r24, 0x05	; 5
 588:	80 77       	andi	r24, 0x70	; 112
 58a:	85 b9       	out	0x05, r24	; 5
		col = (KEY_PIN & 0x70 );
 58c:	83 b1       	in	r24, 0x03	; 3
 58e:	80 77       	andi	r24, 0x70	; 112
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <col+0x1>
 596:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <col>
		
	} while (col!=0x70);
 59a:	80 37       	cpi	r24, 0x70	; 112
 59c:	91 05       	cpc	r25, r1
 59e:	99 f7       	brne	.-26     	; 0x586 <waitforkey>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5a0:	8f e3       	ldi	r24, 0x3F	; 63
 5a2:	9c e9       	ldi	r25, 0x9C	; 156
 5a4:	01 97       	sbiw	r24, 0x01	; 1
 5a6:	f1 f7       	brne	.-4      	; 0x5a4 <waitforkey+0x1e>
 5a8:	00 c0       	rjmp	.+0      	; 0x5aa <waitforkey+0x24>
 5aa:	00 00       	nop
	do 
	{
		do 
		{
			_delay_ms(20);
			col = (KEY_PIN & 0x70 );
 5ac:	83 b1       	in	r24, 0x03	; 3
 5ae:	80 77       	andi	r24, 0x70	; 112
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <col+0x1>
 5b6:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <col>
		} while (col == 0x70);
 5ba:	80 37       	cpi	r24, 0x70	; 112
 5bc:	91 05       	cpc	r25, r1
 5be:	81 f3       	breq	.-32     	; 0x5a0 <waitforkey+0x1a>
 5c0:	8f e3       	ldi	r24, 0x3F	; 63
 5c2:	9c e9       	ldi	r25, 0x9C	; 156
 5c4:	01 97       	sbiw	r24, 0x01	; 1
 5c6:	f1 f7       	brne	.-4      	; 0x5c4 <waitforkey+0x3e>
 5c8:	00 c0       	rjmp	.+0      	; 0x5ca <waitforkey+0x44>
 5ca:	00 00       	nop
		_delay_ms(20);
		col = (KEY_PIN & 0x70 );
 5cc:	83 b1       	in	r24, 0x03	; 3
 5ce:	80 77       	andi	r24, 0x70	; 112
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <col+0x1>
 5d6:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <col>
	} while (col==0x70);
 5da:	80 37       	cpi	r24, 0x70	; 112
 5dc:	91 05       	cpc	r25, r1
 5de:	01 f3       	breq	.-64     	; 0x5a0 <waitforkey+0x1a>

	while(1){
		KEY_PRT = 0xFE;
 5e0:	2e ef       	ldi	r18, 0xFE	; 254
		col = (KEY_PIN & 0x70 );
		if(col!=0x70){
			row = 0;
			break;
		}
		KEY_PRT = 0x7D;
 5e2:	3d e7       	ldi	r19, 0x7D	; 125
		col = (KEY_PIN & 0x70 );
		if(col!=0x70){
			row = 1;
			break;
		}
		KEY_PRT = 0x7B;
 5e4:	4b e7       	ldi	r20, 0x7B	; 123
		col = (KEY_PIN & 0x70 );
		if(col!=0x70){
			row = 2;
			break;
		}
		KEY_PRT = 0x77;
 5e6:	57 e7       	ldi	r21, 0x77	; 119
		_delay_ms(20);
		col = (KEY_PIN & 0x70 );
	} while (col==0x70);

	while(1){
		KEY_PRT = 0xFE;
 5e8:	25 b9       	out	0x05, r18	; 5
		col = (KEY_PIN & 0x70 );
 5ea:	83 b1       	in	r24, 0x03	; 3
 5ec:	80 77       	andi	r24, 0x70	; 112
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <col+0x1>
 5f4:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <col>
		if(col!=0x70){
 5f8:	80 37       	cpi	r24, 0x70	; 112
 5fa:	91 05       	cpc	r25, r1
 5fc:	29 f0       	breq	.+10     	; 0x608 <waitforkey+0x82>
			row = 0;
 5fe:	10 92 11 02 	sts	0x0211, r1	; 0x800211 <row+0x1>
 602:	10 92 10 02 	sts	0x0210, r1	; 0x800210 <row>
			break;
 606:	35 c0       	rjmp	.+106    	; 0x672 <waitforkey+0xec>
		}
		KEY_PRT = 0x7D;
 608:	35 b9       	out	0x05, r19	; 5
		col = (KEY_PIN & 0x70 );
 60a:	83 b1       	in	r24, 0x03	; 3
 60c:	80 77       	andi	r24, 0x70	; 112
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <col+0x1>
 614:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <col>
		if(col!=0x70){
 618:	80 37       	cpi	r24, 0x70	; 112
 61a:	91 05       	cpc	r25, r1
 61c:	39 f0       	breq	.+14     	; 0x62c <waitforkey+0xa6>
			row = 1;
 61e:	81 e0       	ldi	r24, 0x01	; 1
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <row+0x1>
 626:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <row>
			break;
 62a:	23 c0       	rjmp	.+70     	; 0x672 <waitforkey+0xec>
		}
		KEY_PRT = 0x7B;
 62c:	45 b9       	out	0x05, r20	; 5
		col = (KEY_PIN & 0x70 );
 62e:	83 b1       	in	r24, 0x03	; 3
 630:	80 77       	andi	r24, 0x70	; 112
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <col+0x1>
 638:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <col>
		if(col!=0x70){
 63c:	80 37       	cpi	r24, 0x70	; 112
 63e:	91 05       	cpc	r25, r1
 640:	39 f0       	breq	.+14     	; 0x650 <waitforkey+0xca>
			row = 2;
 642:	82 e0       	ldi	r24, 0x02	; 2
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <row+0x1>
 64a:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <row>
			break;
 64e:	11 c0       	rjmp	.+34     	; 0x672 <waitforkey+0xec>
		}
		KEY_PRT = 0x77;
 650:	55 b9       	out	0x05, r21	; 5
		col = (KEY_PIN & 0x70 );
 652:	83 b1       	in	r24, 0x03	; 3
 654:	80 77       	andi	r24, 0x70	; 112
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <col+0x1>
 65c:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <col>
		if(col!=0x70){
 660:	80 37       	cpi	r24, 0x70	; 112
 662:	91 05       	cpc	r25, r1
 664:	09 f2       	breq	.-126    	; 0x5e8 <waitforkey+0x62>
			row = 3;
 666:	83 e0       	ldi	r24, 0x03	; 3
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <row+0x1>
 66e:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <row>
			break;
		}
	}
	KEY_PRT = 0x7F;
 672:	8f e7       	ldi	r24, 0x7F	; 127
 674:	85 b9       	out	0x05, r24	; 5
	if(col==0x60){
 676:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <col>
 67a:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <col+0x1>
 67e:	80 36       	cpi	r24, 0x60	; 96
 680:	91 05       	cpc	r25, r1
 682:	71 f4       	brne	.+28     	; 0x6a0 <waitforkey+0x11a>
		return keys[row][0];
 684:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <row>
 688:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <row+0x1>
 68c:	fc 01       	movw	r30, r24
 68e:	ee 0f       	add	r30, r30
 690:	ff 1f       	adc	r31, r31
 692:	8e 0f       	add	r24, r30
 694:	9f 1f       	adc	r25, r31
 696:	fc 01       	movw	r30, r24
 698:	ea 5f       	subi	r30, 0xFA	; 250
 69a:	fe 4f       	sbci	r31, 0xFE	; 254
 69c:	80 81       	ld	r24, Z
 69e:	08 95       	ret
	}
	if(col==0x50){
 6a0:	80 35       	cpi	r24, 0x50	; 80
 6a2:	91 05       	cpc	r25, r1
 6a4:	71 f4       	brne	.+28     	; 0x6c2 <waitforkey+0x13c>
		return keys[row][1];
 6a6:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <row>
 6aa:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <row+0x1>
 6ae:	fc 01       	movw	r30, r24
 6b0:	ee 0f       	add	r30, r30
 6b2:	ff 1f       	adc	r31, r31
 6b4:	8e 0f       	add	r24, r30
 6b6:	9f 1f       	adc	r25, r31
 6b8:	fc 01       	movw	r30, r24
 6ba:	ea 5f       	subi	r30, 0xFA	; 250
 6bc:	fe 4f       	sbci	r31, 0xFE	; 254
 6be:	81 81       	ldd	r24, Z+1	; 0x01
 6c0:	08 95       	ret
	}
	
	return keys[row][2];
 6c2:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <row>
 6c6:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <row+0x1>
 6ca:	fc 01       	movw	r30, r24
 6cc:	ee 0f       	add	r30, r30
 6ce:	ff 1f       	adc	r31, r31
 6d0:	8e 0f       	add	r24, r30
 6d2:	9f 1f       	adc	r25, r31
 6d4:	fc 01       	movw	r30, r24
 6d6:	ea 5f       	subi	r30, 0xFA	; 250
 6d8:	fe 4f       	sbci	r31, 0xFE	; 254
 6da:	82 81       	ldd	r24, Z+2	; 0x02
	
	
}
 6dc:	08 95       	ret

000006de <lightuprgb>:
#include <pwm.h>
#include <keypad.h>

int redread,greenread,blueread;

void lightuprgb(){
 6de:	cf 92       	push	r12
 6e0:	df 92       	push	r13
 6e2:	ef 92       	push	r14
 6e4:	ff 92       	push	r15
 6e6:	0f 93       	push	r16
 6e8:	1f 93       	push	r17
 6ea:	cf 93       	push	r28
 6ec:	df 93       	push	r29
 6ee:	cd b7       	in	r28, 0x3d	; 61
 6f0:	de b7       	in	r29, 0x3e	; 62
 6f2:	29 97       	sbiw	r28, 0x09	; 9
 6f4:	0f b6       	in	r0, 0x3f	; 63
 6f6:	f8 94       	cli
 6f8:	de bf       	out	0x3e, r29	; 62
 6fa:	0f be       	out	0x3f, r0	; 63
 6fc:	cd bf       	out	0x3d, r28	; 61
	initPwm(6);
 6fe:	86 e0       	ldi	r24, 0x06	; 6
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	0e 94 91 02 	call	0x522	; 0x522 <initPwm>
	initPwm(5);
 706:	85 e0       	ldi	r24, 0x05	; 5
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	0e 94 91 02 	call	0x522	; 0x522 <initPwm>
	initPwm(3);
 70e:	83 e0       	ldi	r24, 0x03	; 3
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	0e 94 91 02 	call	0x522	; 0x522 <initPwm>
	lcd4clr();
 716:	0e 94 0c 01 	call	0x218	; 0x218 <lcd4clr>
	lcd4print("RRRGGGBBB");
 71a:	86 e9       	ldi	r24, 0x96	; 150
 71c:	91 e0       	ldi	r25, 0x01	; 1
 71e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	gotoNewline();
 722:	0e 94 11 01 	call	0x222	; 0x222 <gotoNewline>
	int red =0;
	int green = 0;
	int blue = 0;
	char inp[9][1];
	int i = 0;
 726:	00 e0       	ldi	r16, 0x00	; 0
 728:	10 e0       	ldi	r17, 0x00	; 0
	while(i<9)
	{	
		char c = waitforkey();
 72a:	0e 94 c3 02 	call	0x586	; 0x586 <waitforkey>
		if(c=='*'){
 72e:	8a 32       	cpi	r24, 0x2A	; 42
 730:	59 f4       	brne	.+22     	; 0x748 <lightuprgb+0x6a>
			i=0;
			lcd4clr();
 732:	0e 94 0c 01 	call	0x218	; 0x218 <lcd4clr>
			lcd4print("RRRGGGBBB");
 736:	86 e9       	ldi	r24, 0x96	; 150
 738:	91 e0       	ldi	r25, 0x01	; 1
 73a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
			gotoNewline();
 73e:	0e 94 11 01 	call	0x222	; 0x222 <gotoNewline>
	int i = 0;
	while(i<9)
	{	
		char c = waitforkey();
		if(c=='*'){
			i=0;
 742:	00 e0       	ldi	r16, 0x00	; 0
 744:	10 e0       	ldi	r17, 0x00	; 0
 746:	f1 cf       	rjmp	.-30     	; 0x72a <lightuprgb+0x4c>
			lcd4print("RRRGGGBBB");
			gotoNewline();
			continue;
			
		}
		inp[i][0] = c;
 748:	e1 e0       	ldi	r30, 0x01	; 1
 74a:	f0 e0       	ldi	r31, 0x00	; 0
 74c:	ec 0f       	add	r30, r28
 74e:	fd 1f       	adc	r31, r29
 750:	e0 0f       	add	r30, r16
 752:	f1 1f       	adc	r31, r17
 754:	80 83       	st	Z, r24
		lcd4printlen(inp[i],1);
 756:	61 e0       	ldi	r22, 0x01	; 1
 758:	70 e0       	ldi	r23, 0x00	; 0
 75a:	cf 01       	movw	r24, r30
 75c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <lcd4printlen>
		i++;
 760:	0f 5f       	subi	r16, 0xFF	; 255
 762:	1f 4f       	sbci	r17, 0xFF	; 255
	int red =0;
	int green = 0;
	int blue = 0;
	char inp[9][1];
	int i = 0;
	while(i<9)
 764:	09 30       	cpi	r16, 0x09	; 9
 766:	11 05       	cpc	r17, r1
 768:	04 f3       	brlt	.-64     	; 0x72a <lightuprgb+0x4c>
 76a:	fe 01       	movw	r30, r28
 76c:	31 96       	adiw	r30, 0x01	; 1
 76e:	ce 01       	movw	r24, r28
 770:	04 96       	adiw	r24, 0x04	; 4
 772:	00 e0       	ldi	r16, 0x00	; 0
 774:	10 e0       	ldi	r17, 0x00	; 0
 776:	e1 2c       	mov	r14, r1
 778:	f1 2c       	mov	r15, r1
 77a:	c1 2c       	mov	r12, r1
 77c:	d1 2c       	mov	r13, r1
		lcd4printlen(inp[i],1);
		i++;
		
	}
	for(int j =0; j<3;j++){
		red = red*10+(int)inp[j][0]-(int)'0';
 77e:	21 91       	ld	r18, Z+
 780:	a6 01       	movw	r20, r12
 782:	44 0f       	add	r20, r20
 784:	55 1f       	adc	r21, r21
 786:	cc 0c       	add	r12, r12
 788:	dd 1c       	adc	r13, r13
 78a:	cc 0c       	add	r12, r12
 78c:	dd 1c       	adc	r13, r13
 78e:	cc 0c       	add	r12, r12
 790:	dd 1c       	adc	r13, r13
 792:	c4 0e       	add	r12, r20
 794:	d5 1e       	adc	r13, r21
 796:	c2 0e       	add	r12, r18
 798:	d1 1c       	adc	r13, r1
 79a:	20 e3       	ldi	r18, 0x30	; 48
 79c:	c2 1a       	sub	r12, r18
 79e:	d1 08       	sbc	r13, r1
		green = green*10+(int)inp[j+3][0]-(int)'0';
 7a0:	97 01       	movw	r18, r14
 7a2:	22 0f       	add	r18, r18
 7a4:	33 1f       	adc	r19, r19
 7a6:	ee 0c       	add	r14, r14
 7a8:	ff 1c       	adc	r15, r15
 7aa:	ee 0c       	add	r14, r14
 7ac:	ff 1c       	adc	r15, r15
 7ae:	ee 0c       	add	r14, r14
 7b0:	ff 1c       	adc	r15, r15
 7b2:	e2 0e       	add	r14, r18
 7b4:	f3 1e       	adc	r15, r19
 7b6:	22 81       	ldd	r18, Z+2	; 0x02
 7b8:	e2 0e       	add	r14, r18
 7ba:	f1 1c       	adc	r15, r1
 7bc:	20 e3       	ldi	r18, 0x30	; 48
 7be:	e2 1a       	sub	r14, r18
 7c0:	f1 08       	sbc	r15, r1
		blue = blue*10+(int)inp[j+6][0]-(int)'0';
 7c2:	98 01       	movw	r18, r16
 7c4:	22 0f       	add	r18, r18
 7c6:	33 1f       	adc	r19, r19
 7c8:	00 0f       	add	r16, r16
 7ca:	11 1f       	adc	r17, r17
 7cc:	00 0f       	add	r16, r16
 7ce:	11 1f       	adc	r17, r17
 7d0:	00 0f       	add	r16, r16
 7d2:	11 1f       	adc	r17, r17
 7d4:	02 0f       	add	r16, r18
 7d6:	13 1f       	adc	r17, r19
 7d8:	25 81       	ldd	r18, Z+5	; 0x05
 7da:	02 0f       	add	r16, r18
 7dc:	11 1d       	adc	r17, r1
 7de:	00 53       	subi	r16, 0x30	; 48
 7e0:	11 09       	sbc	r17, r1
		inp[i][0] = c;
		lcd4printlen(inp[i],1);
		i++;
		
	}
	for(int j =0; j<3;j++){
 7e2:	e8 17       	cp	r30, r24
 7e4:	f9 07       	cpc	r31, r25
 7e6:	59 f6       	brne	.-106    	; 0x77e <lightuprgb+0xa0>
		inp[0] = waitforkey();
		blue = blue*10+(int)inp[0]-(int)'0';
		lcd4printlen(inp,1);
		
	}*/
	lcd4print("finish");
 7e8:	80 ea       	ldi	r24, 0xA0	; 160
 7ea:	91 e0       	ldi	r25, 0x01	; 1
 7ec:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	pwm(6,255-red);
 7f0:	c0 94       	com	r12
void pwm(int id,uint8_t value){
	switch (id)
	{
		case 6:
			
			OCR0A =value;
 7f2:	c7 bc       	out	0x27, r12	; 39
	pwm(5,255-green);
 7f4:	e0 94       	com	r14
			break;
		
		case 5:
			
			OCR0B = value;
 7f6:	e8 bc       	out	0x28, r14	; 40
	pwm(3,255-blue);
 7f8:	00 95       	com	r16
			break;
		case 3:
			OCR2B = value;
 7fa:	00 93 b4 00 	sts	0x00B4, r16	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
	while(1){
		char c = waitforkey();
 7fe:	0e 94 c3 02 	call	0x586	; 0x586 <waitforkey>
		if(c=='#'){
 802:	83 32       	cpi	r24, 0x23	; 35
 804:	e1 f7       	brne	.-8      	; 0x7fe <lightuprgb+0x120>
void pwm(int id,uint8_t value){
	switch (id)
	{
		case 6:
			
			OCR0A =value;
 806:	17 bc       	out	0x27, r1	; 39
			break;
		
		case 5:
			
			OCR0B = value;
 808:	18 bc       	out	0x28, r1	; 40
			break;
		case 3:
			OCR2B = value;
 80a:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
	pwm(6,0);
	pwm(5,0);
	pwm(3,0);
	
	
}
 80e:	29 96       	adiw	r28, 0x09	; 9
 810:	0f b6       	in	r0, 0x3f	; 63
 812:	f8 94       	cli
 814:	de bf       	out	0x3e, r29	; 62
 816:	0f be       	out	0x3f, r0	; 63
 818:	cd bf       	out	0x3d, r28	; 61
 81a:	df 91       	pop	r29
 81c:	cf 91       	pop	r28
 81e:	1f 91       	pop	r17
 820:	0f 91       	pop	r16
 822:	ff 90       	pop	r15
 824:	ef 90       	pop	r14
 826:	df 90       	pop	r13
 828:	cf 90       	pop	r12
 82a:	08 95       	ret

0000082c <getreading>:
int getreading(){
 82c:	cf 93       	push	r28
 82e:	df 93       	push	r29
	initAdc();
 830:	0e 94 16 01 	call	0x22c	; 0x22c <initAdc>
	
	lcd4clr();
 834:	0e 94 0c 01 	call	0x218	; 0x218 <lcd4clr>
	lcd4print("Value ");
 838:	87 ea       	ldi	r24, 0xA7	; 167
 83a:	91 e0       	ldi	r25, 0x01	; 1
 83c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	int read = readAdc(4);
 840:	84 e0       	ldi	r24, 0x04	; 4
 842:	0e 94 21 01 	call	0x242	; 0x242 <readAdc>
 846:	ec 01       	movw	r28, r24
	lcd4print(intos(read));
 848:	0e 94 6e 01 	call	0x2dc	; 0x2dc <intos>
 84c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	return read;

}
 850:	ce 01       	movw	r24, r28
 852:	df 91       	pop	r29
 854:	cf 91       	pop	r28
 856:	08 95       	ret

00000858 <sensorreading>:
void sensorreading(){
 858:	8f 92       	push	r8
 85a:	9f 92       	push	r9
 85c:	af 92       	push	r10
 85e:	bf 92       	push	r11
 860:	cf 92       	push	r12
 862:	df 92       	push	r13
 864:	ef 92       	push	r14
 866:	ff 92       	push	r15
 868:	0f 93       	push	r16
 86a:	1f 93       	push	r17
 86c:	cf 93       	push	r28
 86e:	df 93       	push	r29
	lcd4clr();
 870:	0e 94 0c 01 	call	0x218	; 0x218 <lcd4clr>
	lcd4print("Press key, red");
 874:	8e ea       	ldi	r24, 0xAE	; 174
 876:	91 e0       	ldi	r25, 0x01	; 1
 878:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	waitforkey();
 87c:	0e 94 c3 02 	call	0x586	; 0x586 <waitforkey>
	redread = getreading();
 880:	0e 94 16 04 	call	0x82c	; 0x82c <getreading>
 884:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <redread+0x1>
 888:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <redread>
	gotoNewline();
 88c:	0e 94 11 01 	call	0x222	; 0x222 <gotoNewline>
	lcd4print("Press key, green");
 890:	8d eb       	ldi	r24, 0xBD	; 189
 892:	91 e0       	ldi	r25, 0x01	; 1
 894:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	waitforkey();
 898:	0e 94 c3 02 	call	0x586	; 0x586 <waitforkey>
	greenread = getreading();
 89c:	0e 94 16 04 	call	0x82c	; 0x82c <getreading>
 8a0:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <greenread+0x1>
 8a4:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <greenread>
	gotoNewline();
 8a8:	0e 94 11 01 	call	0x222	; 0x222 <gotoNewline>
	lcd4print("Press key, blue");
 8ac:	8e ec       	ldi	r24, 0xCE	; 206
 8ae:	91 e0       	ldi	r25, 0x01	; 1
 8b0:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	waitforkey();
 8b4:	0e 94 c3 02 	call	0x586	; 0x586 <waitforkey>
	blueread = getreading();
 8b8:	0e 94 16 04 	call	0x82c	; 0x82c <getreading>
 8bc:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <blueread+0x1>
 8c0:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <blueread>
	lcd4clr();
 8c4:	0e 94 0c 01 	call	0x218	; 0x218 <lcd4clr>
	lcd4print(intos(redread));
 8c8:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <redread>
 8cc:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <redread+0x1>
 8d0:	0e 94 6e 01 	call	0x2dc	; 0x2dc <intos>
 8d4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	lcd4print(", ");
 8d8:	8e ed       	ldi	r24, 0xDE	; 222
 8da:	91 e0       	ldi	r25, 0x01	; 1
 8dc:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	lcd4print(intos(greenread));
 8e0:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <greenread>
 8e4:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <greenread+0x1>
 8e8:	0e 94 6e 01 	call	0x2dc	; 0x2dc <intos>
 8ec:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	lcd4print(", ");
 8f0:	8e ed       	ldi	r24, 0xDE	; 222
 8f2:	91 e0       	ldi	r25, 0x01	; 1
 8f4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	lcd4print(intos(blueread));
 8f8:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <blueread>
 8fc:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <blueread+0x1>
 900:	0e 94 6e 01 	call	0x2dc	; 0x2dc <intos>
 904:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	double* values = readingtorgb((double)redread,(double)greenread,(double)blueread);
 908:	60 91 08 02 	lds	r22, 0x0208	; 0x800208 <blueread>
 90c:	70 91 09 02 	lds	r23, 0x0209	; 0x800209 <blueread+0x1>
 910:	07 2e       	mov	r0, r23
 912:	00 0c       	add	r0, r0
 914:	88 0b       	sbc	r24, r24
 916:	99 0b       	sbc	r25, r25
 918:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__floatsisf>
 91c:	6b 01       	movw	r12, r22
 91e:	7c 01       	movw	r14, r24
 920:	60 91 0e 02 	lds	r22, 0x020E	; 0x80020e <greenread>
 924:	70 91 0f 02 	lds	r23, 0x020F	; 0x80020f <greenread+0x1>
 928:	07 2e       	mov	r0, r23
 92a:	00 0c       	add	r0, r0
 92c:	88 0b       	sbc	r24, r24
 92e:	99 0b       	sbc	r25, r25
 930:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__floatsisf>
 934:	4b 01       	movw	r8, r22
 936:	5c 01       	movw	r10, r24
 938:	60 91 0a 02 	lds	r22, 0x020A	; 0x80020a <redread>
 93c:	70 91 0b 02 	lds	r23, 0x020B	; 0x80020b <redread+0x1>
 940:	07 2e       	mov	r0, r23
 942:	00 0c       	add	r0, r0
 944:	88 0b       	sbc	r24, r24
 946:	99 0b       	sbc	r25, r25
 948:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__floatsisf>
 94c:	87 01       	movw	r16, r14
 94e:	76 01       	movw	r14, r12
 950:	a5 01       	movw	r20, r10
 952:	94 01       	movw	r18, r8
 954:	0e 94 77 01 	call	0x2ee	; 0x2ee <readingtorgb>
 958:	ec 01       	movw	r28, r24
	gotoNewline();
 95a:	0e 94 11 01 	call	0x222	; 0x222 <gotoNewline>
	lcd4print(intos((int)values[0]));
 95e:	68 81       	ld	r22, Y
 960:	79 81       	ldd	r23, Y+1	; 0x01
 962:	8a 81       	ldd	r24, Y+2	; 0x02
 964:	9b 81       	ldd	r25, Y+3	; 0x03
 966:	0e 94 6e 05 	call	0xadc	; 0xadc <__fixsfsi>
 96a:	cb 01       	movw	r24, r22
 96c:	0e 94 6e 01 	call	0x2dc	; 0x2dc <intos>
 970:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	lcd4print(", ");
 974:	8e ed       	ldi	r24, 0xDE	; 222
 976:	91 e0       	ldi	r25, 0x01	; 1
 978:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	lcd4print(intos((int)values[1]));
 97c:	6c 81       	ldd	r22, Y+4	; 0x04
 97e:	7d 81       	ldd	r23, Y+5	; 0x05
 980:	8e 81       	ldd	r24, Y+6	; 0x06
 982:	9f 81       	ldd	r25, Y+7	; 0x07
 984:	0e 94 6e 05 	call	0xadc	; 0xadc <__fixsfsi>
 988:	cb 01       	movw	r24, r22
 98a:	0e 94 6e 01 	call	0x2dc	; 0x2dc <intos>
 98e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	lcd4print(", ");
 992:	8e ed       	ldi	r24, 0xDE	; 222
 994:	91 e0       	ldi	r25, 0x01	; 1
 996:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	lcd4print(intos((int)values[2]));
 99a:	68 85       	ldd	r22, Y+8	; 0x08
 99c:	79 85       	ldd	r23, Y+9	; 0x09
 99e:	8a 85       	ldd	r24, Y+10	; 0x0a
 9a0:	9b 85       	ldd	r25, Y+11	; 0x0b
 9a2:	0e 94 6e 05 	call	0xadc	; 0xadc <__fixsfsi>
 9a6:	cb 01       	movw	r24, r22
 9a8:	0e 94 6e 01 	call	0x2dc	; 0x2dc <intos>
 9ac:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	
	
	while(1){
		char c = waitforkey();
 9b0:	0e 94 c3 02 	call	0x586	; 0x586 <waitforkey>
		if(c=='#'){
 9b4:	83 32       	cpi	r24, 0x23	; 35
 9b6:	e1 f7       	brne	.-8      	; 0x9b0 <__stack+0xb1>
			break;
		}
	}
}
 9b8:	df 91       	pop	r29
 9ba:	cf 91       	pop	r28
 9bc:	1f 91       	pop	r17
 9be:	0f 91       	pop	r16
 9c0:	ff 90       	pop	r15
 9c2:	ef 90       	pop	r14
 9c4:	df 90       	pop	r13
 9c6:	cf 90       	pop	r12
 9c8:	bf 90       	pop	r11
 9ca:	af 90       	pop	r10
 9cc:	9f 90       	pop	r9
 9ce:	8f 90       	pop	r8
 9d0:	08 95       	ret

000009d2 <main>:
int main(){
	while(1){
		lcd4init();
 9d2:	0e 94 89 00 	call	0x112	; 0x112 <lcd4init>
	initkey();
 9d6:	0e 94 be 02 	call	0x57c	; 0x57c <initkey>
	//initPwm(6);
	//initPwm(5);
	//initPwm(3);
	lcd4print("Press 1 ADC");
 9da:	81 ee       	ldi	r24, 0xE1	; 225
 9dc:	91 e0       	ldi	r25, 0x01	; 1
 9de:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	gotoNewline();
 9e2:	0e 94 11 01 	call	0x222	; 0x222 <gotoNewline>
		char c = waitforkey();
		char cr[1];
		cr[0] = c;
		lcd4printlen(cr,1);
	}*/
	lcd4print("Press 2 RGB");
 9e6:	8d ee       	ldi	r24, 0xED	; 237
 9e8:	91 e0       	ldi	r25, 0x01	; 1
 9ea:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd4print>
	char c = waitforkey();
 9ee:	0e 94 c3 02 	call	0x586	; 0x586 <waitforkey>
	//char c ='1';
	if(c=='2'){
 9f2:	82 33       	cpi	r24, 0x32	; 50
 9f4:	19 f4       	brne	.+6      	; 0x9fc <main+0x2a>
		lightuprgb();
 9f6:	0e 94 6f 03 	call	0x6de	; 0x6de <lightuprgb>
 9fa:	eb cf       	rjmp	.-42     	; 0x9d2 <main>
	}else{
		sensorreading();
 9fc:	0e 94 2c 04 	call	0x858	; 0x858 <sensorreading>
 a00:	e8 cf       	rjmp	.-48     	; 0x9d2 <main>

00000a02 <__subsf3>:
 a02:	50 58       	subi	r21, 0x80	; 128

00000a04 <__addsf3>:
 a04:	bb 27       	eor	r27, r27
 a06:	aa 27       	eor	r26, r26
 a08:	0e 94 19 05 	call	0xa32	; 0xa32 <__addsf3x>
 a0c:	0c 94 f8 05 	jmp	0xbf0	; 0xbf0 <__fp_round>
 a10:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__fp_pscA>
 a14:	38 f0       	brcs	.+14     	; 0xa24 <__addsf3+0x20>
 a16:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <__fp_pscB>
 a1a:	20 f0       	brcs	.+8      	; 0xa24 <__addsf3+0x20>
 a1c:	39 f4       	brne	.+14     	; 0xa2c <__addsf3+0x28>
 a1e:	9f 3f       	cpi	r25, 0xFF	; 255
 a20:	19 f4       	brne	.+6      	; 0xa28 <__addsf3+0x24>
 a22:	26 f4       	brtc	.+8      	; 0xa2c <__addsf3+0x28>
 a24:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__fp_nan>
 a28:	0e f4       	brtc	.+2      	; 0xa2c <__addsf3+0x28>
 a2a:	e0 95       	com	r30
 a2c:	e7 fb       	bst	r30, 7
 a2e:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__fp_inf>

00000a32 <__addsf3x>:
 a32:	e9 2f       	mov	r30, r25
 a34:	0e 94 09 06 	call	0xc12	; 0xc12 <__fp_split3>
 a38:	58 f3       	brcs	.-42     	; 0xa10 <__addsf3+0xc>
 a3a:	ba 17       	cp	r27, r26
 a3c:	62 07       	cpc	r22, r18
 a3e:	73 07       	cpc	r23, r19
 a40:	84 07       	cpc	r24, r20
 a42:	95 07       	cpc	r25, r21
 a44:	20 f0       	brcs	.+8      	; 0xa4e <__addsf3x+0x1c>
 a46:	79 f4       	brne	.+30     	; 0xa66 <__addsf3x+0x34>
 a48:	a6 f5       	brtc	.+104    	; 0xab2 <__addsf3x+0x80>
 a4a:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__fp_zero>
 a4e:	0e f4       	brtc	.+2      	; 0xa52 <__addsf3x+0x20>
 a50:	e0 95       	com	r30
 a52:	0b 2e       	mov	r0, r27
 a54:	ba 2f       	mov	r27, r26
 a56:	a0 2d       	mov	r26, r0
 a58:	0b 01       	movw	r0, r22
 a5a:	b9 01       	movw	r22, r18
 a5c:	90 01       	movw	r18, r0
 a5e:	0c 01       	movw	r0, r24
 a60:	ca 01       	movw	r24, r20
 a62:	a0 01       	movw	r20, r0
 a64:	11 24       	eor	r1, r1
 a66:	ff 27       	eor	r31, r31
 a68:	59 1b       	sub	r21, r25
 a6a:	99 f0       	breq	.+38     	; 0xa92 <__addsf3x+0x60>
 a6c:	59 3f       	cpi	r21, 0xF9	; 249
 a6e:	50 f4       	brcc	.+20     	; 0xa84 <__addsf3x+0x52>
 a70:	50 3e       	cpi	r21, 0xE0	; 224
 a72:	68 f1       	brcs	.+90     	; 0xace <__addsf3x+0x9c>
 a74:	1a 16       	cp	r1, r26
 a76:	f0 40       	sbci	r31, 0x00	; 0
 a78:	a2 2f       	mov	r26, r18
 a7a:	23 2f       	mov	r18, r19
 a7c:	34 2f       	mov	r19, r20
 a7e:	44 27       	eor	r20, r20
 a80:	58 5f       	subi	r21, 0xF8	; 248
 a82:	f3 cf       	rjmp	.-26     	; 0xa6a <__addsf3x+0x38>
 a84:	46 95       	lsr	r20
 a86:	37 95       	ror	r19
 a88:	27 95       	ror	r18
 a8a:	a7 95       	ror	r26
 a8c:	f0 40       	sbci	r31, 0x00	; 0
 a8e:	53 95       	inc	r21
 a90:	c9 f7       	brne	.-14     	; 0xa84 <__addsf3x+0x52>
 a92:	7e f4       	brtc	.+30     	; 0xab2 <__addsf3x+0x80>
 a94:	1f 16       	cp	r1, r31
 a96:	ba 0b       	sbc	r27, r26
 a98:	62 0b       	sbc	r22, r18
 a9a:	73 0b       	sbc	r23, r19
 a9c:	84 0b       	sbc	r24, r20
 a9e:	ba f0       	brmi	.+46     	; 0xace <__addsf3x+0x9c>
 aa0:	91 50       	subi	r25, 0x01	; 1
 aa2:	a1 f0       	breq	.+40     	; 0xacc <__addsf3x+0x9a>
 aa4:	ff 0f       	add	r31, r31
 aa6:	bb 1f       	adc	r27, r27
 aa8:	66 1f       	adc	r22, r22
 aaa:	77 1f       	adc	r23, r23
 aac:	88 1f       	adc	r24, r24
 aae:	c2 f7       	brpl	.-16     	; 0xaa0 <__addsf3x+0x6e>
 ab0:	0e c0       	rjmp	.+28     	; 0xace <__addsf3x+0x9c>
 ab2:	ba 0f       	add	r27, r26
 ab4:	62 1f       	adc	r22, r18
 ab6:	73 1f       	adc	r23, r19
 ab8:	84 1f       	adc	r24, r20
 aba:	48 f4       	brcc	.+18     	; 0xace <__addsf3x+0x9c>
 abc:	87 95       	ror	r24
 abe:	77 95       	ror	r23
 ac0:	67 95       	ror	r22
 ac2:	b7 95       	ror	r27
 ac4:	f7 95       	ror	r31
 ac6:	9e 3f       	cpi	r25, 0xFE	; 254
 ac8:	08 f0       	brcs	.+2      	; 0xacc <__addsf3x+0x9a>
 aca:	b0 cf       	rjmp	.-160    	; 0xa2c <__addsf3+0x28>
 acc:	93 95       	inc	r25
 ace:	88 0f       	add	r24, r24
 ad0:	08 f0       	brcs	.+2      	; 0xad4 <__addsf3x+0xa2>
 ad2:	99 27       	eor	r25, r25
 ad4:	ee 0f       	add	r30, r30
 ad6:	97 95       	ror	r25
 ad8:	87 95       	ror	r24
 ada:	08 95       	ret

00000adc <__fixsfsi>:
 adc:	0e 94 75 05 	call	0xaea	; 0xaea <__fixunssfsi>
 ae0:	68 94       	set
 ae2:	b1 11       	cpse	r27, r1
 ae4:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_szero>
 ae8:	08 95       	ret

00000aea <__fixunssfsi>:
 aea:	0e 94 11 06 	call	0xc22	; 0xc22 <__fp_splitA>
 aee:	88 f0       	brcs	.+34     	; 0xb12 <__fixunssfsi+0x28>
 af0:	9f 57       	subi	r25, 0x7F	; 127
 af2:	98 f0       	brcs	.+38     	; 0xb1a <__fixunssfsi+0x30>
 af4:	b9 2f       	mov	r27, r25
 af6:	99 27       	eor	r25, r25
 af8:	b7 51       	subi	r27, 0x17	; 23
 afa:	b0 f0       	brcs	.+44     	; 0xb28 <__fixunssfsi+0x3e>
 afc:	e1 f0       	breq	.+56     	; 0xb36 <__fixunssfsi+0x4c>
 afe:	66 0f       	add	r22, r22
 b00:	77 1f       	adc	r23, r23
 b02:	88 1f       	adc	r24, r24
 b04:	99 1f       	adc	r25, r25
 b06:	1a f0       	brmi	.+6      	; 0xb0e <__fixunssfsi+0x24>
 b08:	ba 95       	dec	r27
 b0a:	c9 f7       	brne	.-14     	; 0xafe <__fixunssfsi+0x14>
 b0c:	14 c0       	rjmp	.+40     	; 0xb36 <__fixunssfsi+0x4c>
 b0e:	b1 30       	cpi	r27, 0x01	; 1
 b10:	91 f0       	breq	.+36     	; 0xb36 <__fixunssfsi+0x4c>
 b12:	0e 94 2b 06 	call	0xc56	; 0xc56 <__fp_zero>
 b16:	b1 e0       	ldi	r27, 0x01	; 1
 b18:	08 95       	ret
 b1a:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__fp_zero>
 b1e:	67 2f       	mov	r22, r23
 b20:	78 2f       	mov	r23, r24
 b22:	88 27       	eor	r24, r24
 b24:	b8 5f       	subi	r27, 0xF8	; 248
 b26:	39 f0       	breq	.+14     	; 0xb36 <__fixunssfsi+0x4c>
 b28:	b9 3f       	cpi	r27, 0xF9	; 249
 b2a:	cc f3       	brlt	.-14     	; 0xb1e <__fixunssfsi+0x34>
 b2c:	86 95       	lsr	r24
 b2e:	77 95       	ror	r23
 b30:	67 95       	ror	r22
 b32:	b3 95       	inc	r27
 b34:	d9 f7       	brne	.-10     	; 0xb2c <__fixunssfsi+0x42>
 b36:	3e f4       	brtc	.+14     	; 0xb46 <__fixunssfsi+0x5c>
 b38:	90 95       	com	r25
 b3a:	80 95       	com	r24
 b3c:	70 95       	com	r23
 b3e:	61 95       	neg	r22
 b40:	7f 4f       	sbci	r23, 0xFF	; 255
 b42:	8f 4f       	sbci	r24, 0xFF	; 255
 b44:	9f 4f       	sbci	r25, 0xFF	; 255
 b46:	08 95       	ret

00000b48 <__floatunsisf>:
 b48:	e8 94       	clt
 b4a:	09 c0       	rjmp	.+18     	; 0xb5e <__floatsisf+0x12>

00000b4c <__floatsisf>:
 b4c:	97 fb       	bst	r25, 7
 b4e:	3e f4       	brtc	.+14     	; 0xb5e <__floatsisf+0x12>
 b50:	90 95       	com	r25
 b52:	80 95       	com	r24
 b54:	70 95       	com	r23
 b56:	61 95       	neg	r22
 b58:	7f 4f       	sbci	r23, 0xFF	; 255
 b5a:	8f 4f       	sbci	r24, 0xFF	; 255
 b5c:	9f 4f       	sbci	r25, 0xFF	; 255
 b5e:	99 23       	and	r25, r25
 b60:	a9 f0       	breq	.+42     	; 0xb8c <__floatsisf+0x40>
 b62:	f9 2f       	mov	r31, r25
 b64:	96 e9       	ldi	r25, 0x96	; 150
 b66:	bb 27       	eor	r27, r27
 b68:	93 95       	inc	r25
 b6a:	f6 95       	lsr	r31
 b6c:	87 95       	ror	r24
 b6e:	77 95       	ror	r23
 b70:	67 95       	ror	r22
 b72:	b7 95       	ror	r27
 b74:	f1 11       	cpse	r31, r1
 b76:	f8 cf       	rjmp	.-16     	; 0xb68 <__floatsisf+0x1c>
 b78:	fa f4       	brpl	.+62     	; 0xbb8 <__floatsisf+0x6c>
 b7a:	bb 0f       	add	r27, r27
 b7c:	11 f4       	brne	.+4      	; 0xb82 <__floatsisf+0x36>
 b7e:	60 ff       	sbrs	r22, 0
 b80:	1b c0       	rjmp	.+54     	; 0xbb8 <__floatsisf+0x6c>
 b82:	6f 5f       	subi	r22, 0xFF	; 255
 b84:	7f 4f       	sbci	r23, 0xFF	; 255
 b86:	8f 4f       	sbci	r24, 0xFF	; 255
 b88:	9f 4f       	sbci	r25, 0xFF	; 255
 b8a:	16 c0       	rjmp	.+44     	; 0xbb8 <__floatsisf+0x6c>
 b8c:	88 23       	and	r24, r24
 b8e:	11 f0       	breq	.+4      	; 0xb94 <__floatsisf+0x48>
 b90:	96 e9       	ldi	r25, 0x96	; 150
 b92:	11 c0       	rjmp	.+34     	; 0xbb6 <__floatsisf+0x6a>
 b94:	77 23       	and	r23, r23
 b96:	21 f0       	breq	.+8      	; 0xba0 <__floatsisf+0x54>
 b98:	9e e8       	ldi	r25, 0x8E	; 142
 b9a:	87 2f       	mov	r24, r23
 b9c:	76 2f       	mov	r23, r22
 b9e:	05 c0       	rjmp	.+10     	; 0xbaa <__floatsisf+0x5e>
 ba0:	66 23       	and	r22, r22
 ba2:	71 f0       	breq	.+28     	; 0xbc0 <__floatsisf+0x74>
 ba4:	96 e8       	ldi	r25, 0x86	; 134
 ba6:	86 2f       	mov	r24, r22
 ba8:	70 e0       	ldi	r23, 0x00	; 0
 baa:	60 e0       	ldi	r22, 0x00	; 0
 bac:	2a f0       	brmi	.+10     	; 0xbb8 <__floatsisf+0x6c>
 bae:	9a 95       	dec	r25
 bb0:	66 0f       	add	r22, r22
 bb2:	77 1f       	adc	r23, r23
 bb4:	88 1f       	adc	r24, r24
 bb6:	da f7       	brpl	.-10     	; 0xbae <__floatsisf+0x62>
 bb8:	88 0f       	add	r24, r24
 bba:	96 95       	lsr	r25
 bbc:	87 95       	ror	r24
 bbe:	97 f9       	bld	r25, 7
 bc0:	08 95       	ret

00000bc2 <__fp_inf>:
 bc2:	97 f9       	bld	r25, 7
 bc4:	9f 67       	ori	r25, 0x7F	; 127
 bc6:	80 e8       	ldi	r24, 0x80	; 128
 bc8:	70 e0       	ldi	r23, 0x00	; 0
 bca:	60 e0       	ldi	r22, 0x00	; 0
 bcc:	08 95       	ret

00000bce <__fp_nan>:
 bce:	9f ef       	ldi	r25, 0xFF	; 255
 bd0:	80 ec       	ldi	r24, 0xC0	; 192
 bd2:	08 95       	ret

00000bd4 <__fp_pscA>:
 bd4:	00 24       	eor	r0, r0
 bd6:	0a 94       	dec	r0
 bd8:	16 16       	cp	r1, r22
 bda:	17 06       	cpc	r1, r23
 bdc:	18 06       	cpc	r1, r24
 bde:	09 06       	cpc	r0, r25
 be0:	08 95       	ret

00000be2 <__fp_pscB>:
 be2:	00 24       	eor	r0, r0
 be4:	0a 94       	dec	r0
 be6:	12 16       	cp	r1, r18
 be8:	13 06       	cpc	r1, r19
 bea:	14 06       	cpc	r1, r20
 bec:	05 06       	cpc	r0, r21
 bee:	08 95       	ret

00000bf0 <__fp_round>:
 bf0:	09 2e       	mov	r0, r25
 bf2:	03 94       	inc	r0
 bf4:	00 0c       	add	r0, r0
 bf6:	11 f4       	brne	.+4      	; 0xbfc <__fp_round+0xc>
 bf8:	88 23       	and	r24, r24
 bfa:	52 f0       	brmi	.+20     	; 0xc10 <__fp_round+0x20>
 bfc:	bb 0f       	add	r27, r27
 bfe:	40 f4       	brcc	.+16     	; 0xc10 <__fp_round+0x20>
 c00:	bf 2b       	or	r27, r31
 c02:	11 f4       	brne	.+4      	; 0xc08 <__fp_round+0x18>
 c04:	60 ff       	sbrs	r22, 0
 c06:	04 c0       	rjmp	.+8      	; 0xc10 <__fp_round+0x20>
 c08:	6f 5f       	subi	r22, 0xFF	; 255
 c0a:	7f 4f       	sbci	r23, 0xFF	; 255
 c0c:	8f 4f       	sbci	r24, 0xFF	; 255
 c0e:	9f 4f       	sbci	r25, 0xFF	; 255
 c10:	08 95       	ret

00000c12 <__fp_split3>:
 c12:	57 fd       	sbrc	r21, 7
 c14:	90 58       	subi	r25, 0x80	; 128
 c16:	44 0f       	add	r20, r20
 c18:	55 1f       	adc	r21, r21
 c1a:	59 f0       	breq	.+22     	; 0xc32 <__fp_splitA+0x10>
 c1c:	5f 3f       	cpi	r21, 0xFF	; 255
 c1e:	71 f0       	breq	.+28     	; 0xc3c <__fp_splitA+0x1a>
 c20:	47 95       	ror	r20

00000c22 <__fp_splitA>:
 c22:	88 0f       	add	r24, r24
 c24:	97 fb       	bst	r25, 7
 c26:	99 1f       	adc	r25, r25
 c28:	61 f0       	breq	.+24     	; 0xc42 <__fp_splitA+0x20>
 c2a:	9f 3f       	cpi	r25, 0xFF	; 255
 c2c:	79 f0       	breq	.+30     	; 0xc4c <__fp_splitA+0x2a>
 c2e:	87 95       	ror	r24
 c30:	08 95       	ret
 c32:	12 16       	cp	r1, r18
 c34:	13 06       	cpc	r1, r19
 c36:	14 06       	cpc	r1, r20
 c38:	55 1f       	adc	r21, r21
 c3a:	f2 cf       	rjmp	.-28     	; 0xc20 <__fp_split3+0xe>
 c3c:	46 95       	lsr	r20
 c3e:	f1 df       	rcall	.-30     	; 0xc22 <__fp_splitA>
 c40:	08 c0       	rjmp	.+16     	; 0xc52 <__fp_splitA+0x30>
 c42:	16 16       	cp	r1, r22
 c44:	17 06       	cpc	r1, r23
 c46:	18 06       	cpc	r1, r24
 c48:	99 1f       	adc	r25, r25
 c4a:	f1 cf       	rjmp	.-30     	; 0xc2e <__fp_splitA+0xc>
 c4c:	86 95       	lsr	r24
 c4e:	71 05       	cpc	r23, r1
 c50:	61 05       	cpc	r22, r1
 c52:	08 94       	sec
 c54:	08 95       	ret

00000c56 <__fp_zero>:
 c56:	e8 94       	clt

00000c58 <__fp_szero>:
 c58:	bb 27       	eor	r27, r27
 c5a:	66 27       	eor	r22, r22
 c5c:	77 27       	eor	r23, r23
 c5e:	cb 01       	movw	r24, r22
 c60:	97 f9       	bld	r25, 7
 c62:	08 95       	ret

00000c64 <__mulsf3>:
 c64:	0e 94 45 06 	call	0xc8a	; 0xc8a <__mulsf3x>
 c68:	0c 94 f8 05 	jmp	0xbf0	; 0xbf0 <__fp_round>
 c6c:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__fp_pscA>
 c70:	38 f0       	brcs	.+14     	; 0xc80 <__mulsf3+0x1c>
 c72:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <__fp_pscB>
 c76:	20 f0       	brcs	.+8      	; 0xc80 <__mulsf3+0x1c>
 c78:	95 23       	and	r25, r21
 c7a:	11 f0       	breq	.+4      	; 0xc80 <__mulsf3+0x1c>
 c7c:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__fp_inf>
 c80:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__fp_nan>
 c84:	11 24       	eor	r1, r1
 c86:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_szero>

00000c8a <__mulsf3x>:
 c8a:	0e 94 09 06 	call	0xc12	; 0xc12 <__fp_split3>
 c8e:	70 f3       	brcs	.-36     	; 0xc6c <__mulsf3+0x8>

00000c90 <__mulsf3_pse>:
 c90:	95 9f       	mul	r25, r21
 c92:	c1 f3       	breq	.-16     	; 0xc84 <__mulsf3+0x20>
 c94:	95 0f       	add	r25, r21
 c96:	50 e0       	ldi	r21, 0x00	; 0
 c98:	55 1f       	adc	r21, r21
 c9a:	62 9f       	mul	r22, r18
 c9c:	f0 01       	movw	r30, r0
 c9e:	72 9f       	mul	r23, r18
 ca0:	bb 27       	eor	r27, r27
 ca2:	f0 0d       	add	r31, r0
 ca4:	b1 1d       	adc	r27, r1
 ca6:	63 9f       	mul	r22, r19
 ca8:	aa 27       	eor	r26, r26
 caa:	f0 0d       	add	r31, r0
 cac:	b1 1d       	adc	r27, r1
 cae:	aa 1f       	adc	r26, r26
 cb0:	64 9f       	mul	r22, r20
 cb2:	66 27       	eor	r22, r22
 cb4:	b0 0d       	add	r27, r0
 cb6:	a1 1d       	adc	r26, r1
 cb8:	66 1f       	adc	r22, r22
 cba:	82 9f       	mul	r24, r18
 cbc:	22 27       	eor	r18, r18
 cbe:	b0 0d       	add	r27, r0
 cc0:	a1 1d       	adc	r26, r1
 cc2:	62 1f       	adc	r22, r18
 cc4:	73 9f       	mul	r23, r19
 cc6:	b0 0d       	add	r27, r0
 cc8:	a1 1d       	adc	r26, r1
 cca:	62 1f       	adc	r22, r18
 ccc:	83 9f       	mul	r24, r19
 cce:	a0 0d       	add	r26, r0
 cd0:	61 1d       	adc	r22, r1
 cd2:	22 1f       	adc	r18, r18
 cd4:	74 9f       	mul	r23, r20
 cd6:	33 27       	eor	r19, r19
 cd8:	a0 0d       	add	r26, r0
 cda:	61 1d       	adc	r22, r1
 cdc:	23 1f       	adc	r18, r19
 cde:	84 9f       	mul	r24, r20
 ce0:	60 0d       	add	r22, r0
 ce2:	21 1d       	adc	r18, r1
 ce4:	82 2f       	mov	r24, r18
 ce6:	76 2f       	mov	r23, r22
 ce8:	6a 2f       	mov	r22, r26
 cea:	11 24       	eor	r1, r1
 cec:	9f 57       	subi	r25, 0x7F	; 127
 cee:	50 40       	sbci	r21, 0x00	; 0
 cf0:	9a f0       	brmi	.+38     	; 0xd18 <__mulsf3_pse+0x88>
 cf2:	f1 f0       	breq	.+60     	; 0xd30 <__mulsf3_pse+0xa0>
 cf4:	88 23       	and	r24, r24
 cf6:	4a f0       	brmi	.+18     	; 0xd0a <__mulsf3_pse+0x7a>
 cf8:	ee 0f       	add	r30, r30
 cfa:	ff 1f       	adc	r31, r31
 cfc:	bb 1f       	adc	r27, r27
 cfe:	66 1f       	adc	r22, r22
 d00:	77 1f       	adc	r23, r23
 d02:	88 1f       	adc	r24, r24
 d04:	91 50       	subi	r25, 0x01	; 1
 d06:	50 40       	sbci	r21, 0x00	; 0
 d08:	a9 f7       	brne	.-22     	; 0xcf4 <__mulsf3_pse+0x64>
 d0a:	9e 3f       	cpi	r25, 0xFE	; 254
 d0c:	51 05       	cpc	r21, r1
 d0e:	80 f0       	brcs	.+32     	; 0xd30 <__mulsf3_pse+0xa0>
 d10:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__fp_inf>
 d14:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_szero>
 d18:	5f 3f       	cpi	r21, 0xFF	; 255
 d1a:	e4 f3       	brlt	.-8      	; 0xd14 <__mulsf3_pse+0x84>
 d1c:	98 3e       	cpi	r25, 0xE8	; 232
 d1e:	d4 f3       	brlt	.-12     	; 0xd14 <__mulsf3_pse+0x84>
 d20:	86 95       	lsr	r24
 d22:	77 95       	ror	r23
 d24:	67 95       	ror	r22
 d26:	b7 95       	ror	r27
 d28:	f7 95       	ror	r31
 d2a:	e7 95       	ror	r30
 d2c:	9f 5f       	subi	r25, 0xFF	; 255
 d2e:	c1 f7       	brne	.-16     	; 0xd20 <__mulsf3_pse+0x90>
 d30:	fe 2b       	or	r31, r30
 d32:	88 0f       	add	r24, r24
 d34:	91 1d       	adc	r25, r1
 d36:	96 95       	lsr	r25
 d38:	87 95       	ror	r24
 d3a:	97 f9       	bld	r25, 7
 d3c:	08 95       	ret

00000d3e <__divmodhi4>:
 d3e:	97 fb       	bst	r25, 7
 d40:	07 2e       	mov	r0, r23
 d42:	16 f4       	brtc	.+4      	; 0xd48 <__divmodhi4+0xa>
 d44:	00 94       	com	r0
 d46:	07 d0       	rcall	.+14     	; 0xd56 <__divmodhi4_neg1>
 d48:	77 fd       	sbrc	r23, 7
 d4a:	09 d0       	rcall	.+18     	; 0xd5e <__divmodhi4_neg2>
 d4c:	0e 94 b3 06 	call	0xd66	; 0xd66 <__udivmodhi4>
 d50:	07 fc       	sbrc	r0, 7
 d52:	05 d0       	rcall	.+10     	; 0xd5e <__divmodhi4_neg2>
 d54:	3e f4       	brtc	.+14     	; 0xd64 <__divmodhi4_exit>

00000d56 <__divmodhi4_neg1>:
 d56:	90 95       	com	r25
 d58:	81 95       	neg	r24
 d5a:	9f 4f       	sbci	r25, 0xFF	; 255
 d5c:	08 95       	ret

00000d5e <__divmodhi4_neg2>:
 d5e:	70 95       	com	r23
 d60:	61 95       	neg	r22
 d62:	7f 4f       	sbci	r23, 0xFF	; 255

00000d64 <__divmodhi4_exit>:
 d64:	08 95       	ret

00000d66 <__udivmodhi4>:
 d66:	aa 1b       	sub	r26, r26
 d68:	bb 1b       	sub	r27, r27
 d6a:	51 e1       	ldi	r21, 0x11	; 17
 d6c:	07 c0       	rjmp	.+14     	; 0xd7c <__udivmodhi4_ep>

00000d6e <__udivmodhi4_loop>:
 d6e:	aa 1f       	adc	r26, r26
 d70:	bb 1f       	adc	r27, r27
 d72:	a6 17       	cp	r26, r22
 d74:	b7 07       	cpc	r27, r23
 d76:	10 f0       	brcs	.+4      	; 0xd7c <__udivmodhi4_ep>
 d78:	a6 1b       	sub	r26, r22
 d7a:	b7 0b       	sbc	r27, r23

00000d7c <__udivmodhi4_ep>:
 d7c:	88 1f       	adc	r24, r24
 d7e:	99 1f       	adc	r25, r25
 d80:	5a 95       	dec	r21
 d82:	a9 f7       	brne	.-22     	; 0xd6e <__udivmodhi4_loop>
 d84:	80 95       	com	r24
 d86:	90 95       	com	r25
 d88:	bc 01       	movw	r22, r24
 d8a:	cd 01       	movw	r24, r26
 d8c:	08 95       	ret

00000d8e <malloc>:
 d8e:	0f 93       	push	r16
 d90:	1f 93       	push	r17
 d92:	cf 93       	push	r28
 d94:	df 93       	push	r29
 d96:	82 30       	cpi	r24, 0x02	; 2
 d98:	91 05       	cpc	r25, r1
 d9a:	10 f4       	brcc	.+4      	; 0xda0 <malloc+0x12>
 d9c:	82 e0       	ldi	r24, 0x02	; 2
 d9e:	90 e0       	ldi	r25, 0x00	; 0
 da0:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <__flp>
 da4:	f0 91 15 02 	lds	r31, 0x0215	; 0x800215 <__flp+0x1>
 da8:	20 e0       	ldi	r18, 0x00	; 0
 daa:	30 e0       	ldi	r19, 0x00	; 0
 dac:	a0 e0       	ldi	r26, 0x00	; 0
 dae:	b0 e0       	ldi	r27, 0x00	; 0
 db0:	30 97       	sbiw	r30, 0x00	; 0
 db2:	19 f1       	breq	.+70     	; 0xdfa <malloc+0x6c>
 db4:	40 81       	ld	r20, Z
 db6:	51 81       	ldd	r21, Z+1	; 0x01
 db8:	02 81       	ldd	r16, Z+2	; 0x02
 dba:	13 81       	ldd	r17, Z+3	; 0x03
 dbc:	48 17       	cp	r20, r24
 dbe:	59 07       	cpc	r21, r25
 dc0:	c8 f0       	brcs	.+50     	; 0xdf4 <malloc+0x66>
 dc2:	84 17       	cp	r24, r20
 dc4:	95 07       	cpc	r25, r21
 dc6:	69 f4       	brne	.+26     	; 0xde2 <malloc+0x54>
 dc8:	10 97       	sbiw	r26, 0x00	; 0
 dca:	31 f0       	breq	.+12     	; 0xdd8 <malloc+0x4a>
 dcc:	12 96       	adiw	r26, 0x02	; 2
 dce:	0c 93       	st	X, r16
 dd0:	12 97       	sbiw	r26, 0x02	; 2
 dd2:	13 96       	adiw	r26, 0x03	; 3
 dd4:	1c 93       	st	X, r17
 dd6:	27 c0       	rjmp	.+78     	; 0xe26 <malloc+0x98>
 dd8:	00 93 14 02 	sts	0x0214, r16	; 0x800214 <__flp>
 ddc:	10 93 15 02 	sts	0x0215, r17	; 0x800215 <__flp+0x1>
 de0:	22 c0       	rjmp	.+68     	; 0xe26 <malloc+0x98>
 de2:	21 15       	cp	r18, r1
 de4:	31 05       	cpc	r19, r1
 de6:	19 f0       	breq	.+6      	; 0xdee <malloc+0x60>
 de8:	42 17       	cp	r20, r18
 dea:	53 07       	cpc	r21, r19
 dec:	18 f4       	brcc	.+6      	; 0xdf4 <malloc+0x66>
 dee:	9a 01       	movw	r18, r20
 df0:	bd 01       	movw	r22, r26
 df2:	ef 01       	movw	r28, r30
 df4:	df 01       	movw	r26, r30
 df6:	f8 01       	movw	r30, r16
 df8:	db cf       	rjmp	.-74     	; 0xdb0 <malloc+0x22>
 dfa:	21 15       	cp	r18, r1
 dfc:	31 05       	cpc	r19, r1
 dfe:	f9 f0       	breq	.+62     	; 0xe3e <malloc+0xb0>
 e00:	28 1b       	sub	r18, r24
 e02:	39 0b       	sbc	r19, r25
 e04:	24 30       	cpi	r18, 0x04	; 4
 e06:	31 05       	cpc	r19, r1
 e08:	80 f4       	brcc	.+32     	; 0xe2a <malloc+0x9c>
 e0a:	8a 81       	ldd	r24, Y+2	; 0x02
 e0c:	9b 81       	ldd	r25, Y+3	; 0x03
 e0e:	61 15       	cp	r22, r1
 e10:	71 05       	cpc	r23, r1
 e12:	21 f0       	breq	.+8      	; 0xe1c <malloc+0x8e>
 e14:	fb 01       	movw	r30, r22
 e16:	93 83       	std	Z+3, r25	; 0x03
 e18:	82 83       	std	Z+2, r24	; 0x02
 e1a:	04 c0       	rjmp	.+8      	; 0xe24 <malloc+0x96>
 e1c:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <__flp+0x1>
 e20:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <__flp>
 e24:	fe 01       	movw	r30, r28
 e26:	32 96       	adiw	r30, 0x02	; 2
 e28:	44 c0       	rjmp	.+136    	; 0xeb2 <malloc+0x124>
 e2a:	fe 01       	movw	r30, r28
 e2c:	e2 0f       	add	r30, r18
 e2e:	f3 1f       	adc	r31, r19
 e30:	81 93       	st	Z+, r24
 e32:	91 93       	st	Z+, r25
 e34:	22 50       	subi	r18, 0x02	; 2
 e36:	31 09       	sbc	r19, r1
 e38:	39 83       	std	Y+1, r19	; 0x01
 e3a:	28 83       	st	Y, r18
 e3c:	3a c0       	rjmp	.+116    	; 0xeb2 <malloc+0x124>
 e3e:	20 91 12 02 	lds	r18, 0x0212	; 0x800212 <__brkval>
 e42:	30 91 13 02 	lds	r19, 0x0213	; 0x800213 <__brkval+0x1>
 e46:	23 2b       	or	r18, r19
 e48:	41 f4       	brne	.+16     	; 0xe5a <malloc+0xcc>
 e4a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 e4e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 e52:	30 93 13 02 	sts	0x0213, r19	; 0x800213 <__brkval+0x1>
 e56:	20 93 12 02 	sts	0x0212, r18	; 0x800212 <__brkval>
 e5a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 e5e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 e62:	21 15       	cp	r18, r1
 e64:	31 05       	cpc	r19, r1
 e66:	41 f4       	brne	.+16     	; 0xe78 <malloc+0xea>
 e68:	2d b7       	in	r18, 0x3d	; 61
 e6a:	3e b7       	in	r19, 0x3e	; 62
 e6c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 e70:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 e74:	24 1b       	sub	r18, r20
 e76:	35 0b       	sbc	r19, r21
 e78:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <__brkval>
 e7c:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <__brkval+0x1>
 e80:	e2 17       	cp	r30, r18
 e82:	f3 07       	cpc	r31, r19
 e84:	a0 f4       	brcc	.+40     	; 0xeae <malloc+0x120>
 e86:	2e 1b       	sub	r18, r30
 e88:	3f 0b       	sbc	r19, r31
 e8a:	28 17       	cp	r18, r24
 e8c:	39 07       	cpc	r19, r25
 e8e:	78 f0       	brcs	.+30     	; 0xeae <malloc+0x120>
 e90:	ac 01       	movw	r20, r24
 e92:	4e 5f       	subi	r20, 0xFE	; 254
 e94:	5f 4f       	sbci	r21, 0xFF	; 255
 e96:	24 17       	cp	r18, r20
 e98:	35 07       	cpc	r19, r21
 e9a:	48 f0       	brcs	.+18     	; 0xeae <malloc+0x120>
 e9c:	4e 0f       	add	r20, r30
 e9e:	5f 1f       	adc	r21, r31
 ea0:	50 93 13 02 	sts	0x0213, r21	; 0x800213 <__brkval+0x1>
 ea4:	40 93 12 02 	sts	0x0212, r20	; 0x800212 <__brkval>
 ea8:	81 93       	st	Z+, r24
 eaa:	91 93       	st	Z+, r25
 eac:	02 c0       	rjmp	.+4      	; 0xeb2 <malloc+0x124>
 eae:	e0 e0       	ldi	r30, 0x00	; 0
 eb0:	f0 e0       	ldi	r31, 0x00	; 0
 eb2:	cf 01       	movw	r24, r30
 eb4:	df 91       	pop	r29
 eb6:	cf 91       	pop	r28
 eb8:	1f 91       	pop	r17
 eba:	0f 91       	pop	r16
 ebc:	08 95       	ret

00000ebe <free>:
 ebe:	cf 93       	push	r28
 ec0:	df 93       	push	r29
 ec2:	00 97       	sbiw	r24, 0x00	; 0
 ec4:	09 f4       	brne	.+2      	; 0xec8 <free+0xa>
 ec6:	81 c0       	rjmp	.+258    	; 0xfca <free+0x10c>
 ec8:	fc 01       	movw	r30, r24
 eca:	32 97       	sbiw	r30, 0x02	; 2
 ecc:	13 82       	std	Z+3, r1	; 0x03
 ece:	12 82       	std	Z+2, r1	; 0x02
 ed0:	a0 91 14 02 	lds	r26, 0x0214	; 0x800214 <__flp>
 ed4:	b0 91 15 02 	lds	r27, 0x0215	; 0x800215 <__flp+0x1>
 ed8:	10 97       	sbiw	r26, 0x00	; 0
 eda:	81 f4       	brne	.+32     	; 0xefc <free+0x3e>
 edc:	20 81       	ld	r18, Z
 ede:	31 81       	ldd	r19, Z+1	; 0x01
 ee0:	82 0f       	add	r24, r18
 ee2:	93 1f       	adc	r25, r19
 ee4:	20 91 12 02 	lds	r18, 0x0212	; 0x800212 <__brkval>
 ee8:	30 91 13 02 	lds	r19, 0x0213	; 0x800213 <__brkval+0x1>
 eec:	28 17       	cp	r18, r24
 eee:	39 07       	cpc	r19, r25
 ef0:	51 f5       	brne	.+84     	; 0xf46 <free+0x88>
 ef2:	f0 93 13 02 	sts	0x0213, r31	; 0x800213 <__brkval+0x1>
 ef6:	e0 93 12 02 	sts	0x0212, r30	; 0x800212 <__brkval>
 efa:	67 c0       	rjmp	.+206    	; 0xfca <free+0x10c>
 efc:	ed 01       	movw	r28, r26
 efe:	20 e0       	ldi	r18, 0x00	; 0
 f00:	30 e0       	ldi	r19, 0x00	; 0
 f02:	ce 17       	cp	r28, r30
 f04:	df 07       	cpc	r29, r31
 f06:	40 f4       	brcc	.+16     	; 0xf18 <free+0x5a>
 f08:	4a 81       	ldd	r20, Y+2	; 0x02
 f0a:	5b 81       	ldd	r21, Y+3	; 0x03
 f0c:	9e 01       	movw	r18, r28
 f0e:	41 15       	cp	r20, r1
 f10:	51 05       	cpc	r21, r1
 f12:	f1 f0       	breq	.+60     	; 0xf50 <free+0x92>
 f14:	ea 01       	movw	r28, r20
 f16:	f5 cf       	rjmp	.-22     	; 0xf02 <free+0x44>
 f18:	d3 83       	std	Z+3, r29	; 0x03
 f1a:	c2 83       	std	Z+2, r28	; 0x02
 f1c:	40 81       	ld	r20, Z
 f1e:	51 81       	ldd	r21, Z+1	; 0x01
 f20:	84 0f       	add	r24, r20
 f22:	95 1f       	adc	r25, r21
 f24:	c8 17       	cp	r28, r24
 f26:	d9 07       	cpc	r29, r25
 f28:	59 f4       	brne	.+22     	; 0xf40 <free+0x82>
 f2a:	88 81       	ld	r24, Y
 f2c:	99 81       	ldd	r25, Y+1	; 0x01
 f2e:	84 0f       	add	r24, r20
 f30:	95 1f       	adc	r25, r21
 f32:	02 96       	adiw	r24, 0x02	; 2
 f34:	91 83       	std	Z+1, r25	; 0x01
 f36:	80 83       	st	Z, r24
 f38:	8a 81       	ldd	r24, Y+2	; 0x02
 f3a:	9b 81       	ldd	r25, Y+3	; 0x03
 f3c:	93 83       	std	Z+3, r25	; 0x03
 f3e:	82 83       	std	Z+2, r24	; 0x02
 f40:	21 15       	cp	r18, r1
 f42:	31 05       	cpc	r19, r1
 f44:	29 f4       	brne	.+10     	; 0xf50 <free+0x92>
 f46:	f0 93 15 02 	sts	0x0215, r31	; 0x800215 <__flp+0x1>
 f4a:	e0 93 14 02 	sts	0x0214, r30	; 0x800214 <__flp>
 f4e:	3d c0       	rjmp	.+122    	; 0xfca <free+0x10c>
 f50:	e9 01       	movw	r28, r18
 f52:	fb 83       	std	Y+3, r31	; 0x03
 f54:	ea 83       	std	Y+2, r30	; 0x02
 f56:	49 91       	ld	r20, Y+
 f58:	59 91       	ld	r21, Y+
 f5a:	c4 0f       	add	r28, r20
 f5c:	d5 1f       	adc	r29, r21
 f5e:	ec 17       	cp	r30, r28
 f60:	fd 07       	cpc	r31, r29
 f62:	61 f4       	brne	.+24     	; 0xf7c <free+0xbe>
 f64:	80 81       	ld	r24, Z
 f66:	91 81       	ldd	r25, Z+1	; 0x01
 f68:	84 0f       	add	r24, r20
 f6a:	95 1f       	adc	r25, r21
 f6c:	02 96       	adiw	r24, 0x02	; 2
 f6e:	e9 01       	movw	r28, r18
 f70:	99 83       	std	Y+1, r25	; 0x01
 f72:	88 83       	st	Y, r24
 f74:	82 81       	ldd	r24, Z+2	; 0x02
 f76:	93 81       	ldd	r25, Z+3	; 0x03
 f78:	9b 83       	std	Y+3, r25	; 0x03
 f7a:	8a 83       	std	Y+2, r24	; 0x02
 f7c:	e0 e0       	ldi	r30, 0x00	; 0
 f7e:	f0 e0       	ldi	r31, 0x00	; 0
 f80:	12 96       	adiw	r26, 0x02	; 2
 f82:	8d 91       	ld	r24, X+
 f84:	9c 91       	ld	r25, X
 f86:	13 97       	sbiw	r26, 0x03	; 3
 f88:	00 97       	sbiw	r24, 0x00	; 0
 f8a:	19 f0       	breq	.+6      	; 0xf92 <free+0xd4>
 f8c:	fd 01       	movw	r30, r26
 f8e:	dc 01       	movw	r26, r24
 f90:	f7 cf       	rjmp	.-18     	; 0xf80 <free+0xc2>
 f92:	8d 91       	ld	r24, X+
 f94:	9c 91       	ld	r25, X
 f96:	11 97       	sbiw	r26, 0x01	; 1
 f98:	9d 01       	movw	r18, r26
 f9a:	2e 5f       	subi	r18, 0xFE	; 254
 f9c:	3f 4f       	sbci	r19, 0xFF	; 255
 f9e:	82 0f       	add	r24, r18
 fa0:	93 1f       	adc	r25, r19
 fa2:	20 91 12 02 	lds	r18, 0x0212	; 0x800212 <__brkval>
 fa6:	30 91 13 02 	lds	r19, 0x0213	; 0x800213 <__brkval+0x1>
 faa:	28 17       	cp	r18, r24
 fac:	39 07       	cpc	r19, r25
 fae:	69 f4       	brne	.+26     	; 0xfca <free+0x10c>
 fb0:	30 97       	sbiw	r30, 0x00	; 0
 fb2:	29 f4       	brne	.+10     	; 0xfbe <free+0x100>
 fb4:	10 92 15 02 	sts	0x0215, r1	; 0x800215 <__flp+0x1>
 fb8:	10 92 14 02 	sts	0x0214, r1	; 0x800214 <__flp>
 fbc:	02 c0       	rjmp	.+4      	; 0xfc2 <free+0x104>
 fbe:	13 82       	std	Z+3, r1	; 0x03
 fc0:	12 82       	std	Z+2, r1	; 0x02
 fc2:	b0 93 13 02 	sts	0x0213, r27	; 0x800213 <__brkval+0x1>
 fc6:	a0 93 12 02 	sts	0x0212, r26	; 0x800212 <__brkval>
 fca:	df 91       	pop	r29
 fcc:	cf 91       	pop	r28
 fce:	08 95       	ret

00000fd0 <_exit>:
 fd0:	f8 94       	cli

00000fd2 <__stop_program>:
 fd2:	ff cf       	rjmp	.-2      	; 0xfd2 <__stop_program>
