
RGBLED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000005c0  00000654  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800112  00800112  00000666  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000666  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000698  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  000006d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d03  00000000  00000000  00000770  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000813  00000000  00000000  00001473  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005d0  00000000  00000000  00001c86  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000021c  00000000  00000000  00002258  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000492  00000000  00000000  00002474  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000807  00000000  00000000  00002906  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  0000310d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__vector_9>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 b9 00 	jmp	0x172	; 0x172 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ec       	ldi	r30, 0xC0	; 192
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 31       	cpi	r26, 0x16	; 22
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 2e 02 	call	0x45c	; 0x45c <main>
  9e:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_16>:
void ADCInit(){
	ADMUX = (1<<REFS0);
	ADCSRA = (1<<ADEN) | (1<<ADIE) | (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2);
	DIDR0 = (1<<ADC1D);
	sei();
	startConv();
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	2f 93       	push	r18
  b2:	3f 93       	push	r19
  b4:	4f 93       	push	r20
  b6:	5f 93       	push	r21
  b8:	6f 93       	push	r22
  ba:	7f 93       	push	r23
  bc:	8f 93       	push	r24
  be:	9f 93       	push	r25
  c0:	af 93       	push	r26
  c2:	bf 93       	push	r27
  c4:	ef 93       	push	r30
  c6:	ff 93       	push	r31
  c8:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <__data_end>
  cc:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <__data_end+0x1>
  d0:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end+0x2>
  d4:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x3>
  d8:	0e 94 49 02 	call	0x492	; 0x492 <__fixunssfsi>
  dc:	67 bd       	out	0x27, r22	; 39
  de:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <__data_end>
  e2:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <__data_end+0x1>
  e6:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end+0x2>
  ea:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x3>
  ee:	0e 94 49 02 	call	0x492	; 0x492 <__fixunssfsi>
  f2:	68 bd       	out	0x28, r22	; 40
  f4:	ff 91       	pop	r31
  f6:	ef 91       	pop	r30
  f8:	bf 91       	pop	r27
  fa:	af 91       	pop	r26
  fc:	9f 91       	pop	r25
  fe:	8f 91       	pop	r24
 100:	7f 91       	pop	r23
 102:	6f 91       	pop	r22
 104:	5f 91       	pop	r21
 106:	4f 91       	pop	r20
 108:	3f 91       	pop	r19
 10a:	2f 91       	pop	r18
 10c:	0f 90       	pop	r0
 10e:	0f be       	out	0x3f, r0	; 63
 110:	0f 90       	pop	r0
 112:	1f 90       	pop	r1
 114:	18 95       	reti

00000116 <__vector_9>:
 116:	1f 92       	push	r1
 118:	0f 92       	push	r0
 11a:	0f b6       	in	r0, 0x3f	; 63
 11c:	0f 92       	push	r0
 11e:	11 24       	eor	r1, r1
 120:	2f 93       	push	r18
 122:	3f 93       	push	r19
 124:	4f 93       	push	r20
 126:	5f 93       	push	r21
 128:	6f 93       	push	r22
 12a:	7f 93       	push	r23
 12c:	8f 93       	push	r24
 12e:	9f 93       	push	r25
 130:	af 93       	push	r26
 132:	bf 93       	push	r27
 134:	ef 93       	push	r30
 136:	ff 93       	push	r31
 138:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <__data_end>
 13c:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <__data_end+0x1>
 140:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end+0x2>
 144:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x3>
 148:	0e 94 49 02 	call	0x492	; 0x492 <__fixunssfsi>
 14c:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
 150:	ff 91       	pop	r31
 152:	ef 91       	pop	r30
 154:	bf 91       	pop	r27
 156:	af 91       	pop	r26
 158:	9f 91       	pop	r25
 15a:	8f 91       	pop	r24
 15c:	7f 91       	pop	r23
 15e:	6f 91       	pop	r22
 160:	5f 91       	pop	r21
 162:	4f 91       	pop	r20
 164:	3f 91       	pop	r19
 166:	2f 91       	pop	r18
 168:	0f 90       	pop	r0
 16a:	0f be       	out	0x3f, r0	; 63
 16c:	0f 90       	pop	r0
 16e:	1f 90       	pop	r1
 170:	18 95       	reti

00000172 <__vector_21>:
 172:	1f 92       	push	r1
 174:	0f 92       	push	r0
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	0f 92       	push	r0
 17a:	11 24       	eor	r1, r1
 17c:	2f 93       	push	r18
 17e:	3f 93       	push	r19
 180:	4f 93       	push	r20
 182:	5f 93       	push	r21
 184:	6f 93       	push	r22
 186:	7f 93       	push	r23
 188:	8f 93       	push	r24
 18a:	9f 93       	push	r25
 18c:	af 93       	push	r26
 18e:	bf 93       	push	r27
 190:	ef 93       	push	r30
 192:	ff 93       	push	r31
 194:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 198:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 19c:	80 e0       	ldi	r24, 0x00	; 0
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__floatunsisf>
 1a4:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <__data_end>
 1a8:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <__data_end+0x1>
 1ac:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end+0x2>
 1b0:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x3>
 1b4:	ff 91       	pop	r31
 1b6:	ef 91       	pop	r30
 1b8:	bf 91       	pop	r27
 1ba:	af 91       	pop	r26
 1bc:	9f 91       	pop	r25
 1be:	8f 91       	pop	r24
 1c0:	7f 91       	pop	r23
 1c2:	6f 91       	pop	r22
 1c4:	5f 91       	pop	r21
 1c6:	4f 91       	pop	r20
 1c8:	3f 91       	pop	r19
 1ca:	2f 91       	pop	r18
 1cc:	0f 90       	pop	r0
 1ce:	0f be       	out	0x3f, r0	; 63
 1d0:	0f 90       	pop	r0
 1d2:	1f 90       	pop	r1
 1d4:	18 95       	reti

000001d6 <lcdCommand>:
 1d6:	28 2f       	mov	r18, r24
 1d8:	20 7f       	andi	r18, 0xF0	; 240
 1da:	30 e0       	ldi	r19, 0x00	; 0
 1dc:	35 95       	asr	r19
 1de:	27 95       	ror	r18
 1e0:	35 95       	asr	r19
 1e2:	27 95       	ror	r18
 1e4:	35 95       	asr	r19
 1e6:	27 95       	ror	r18
 1e8:	28 b9       	out	0x08, r18	; 8
 1ea:	9b b1       	in	r25, 0x0b	; 11
 1ec:	9e 7f       	andi	r25, 0xFE	; 254
 1ee:	9b b9       	out	0x0b, r25	; 11
 1f0:	9b b1       	in	r25, 0x0b	; 11
 1f2:	9d 7f       	andi	r25, 0xFD	; 253
 1f4:	9b b9       	out	0x0b, r25	; 11
 1f6:	9b b1       	in	r25, 0x0b	; 11
 1f8:	94 60       	ori	r25, 0x04	; 4
 1fa:	9b b9       	out	0x0b, r25	; 11
 1fc:	22 e0       	ldi	r18, 0x02	; 2
 1fe:	2a 95       	dec	r18
 200:	f1 f7       	brne	.-4      	; 0x1fe <lcdCommand+0x28>
 202:	00 c0       	rjmp	.+0      	; 0x204 <lcdCommand+0x2e>
 204:	9b b1       	in	r25, 0x0b	; 11
 206:	9b 7f       	andi	r25, 0xFB	; 251
 208:	9b b9       	out	0x0b, r25	; 11
 20a:	e7 ec       	ldi	r30, 0xC7	; 199
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	31 97       	sbiw	r30, 0x01	; 1
 210:	f1 f7       	brne	.-4      	; 0x20e <lcdCommand+0x38>
 212:	00 c0       	rjmp	.+0      	; 0x214 <lcdCommand+0x3e>
 214:	00 00       	nop
 216:	f0 e1       	ldi	r31, 0x10	; 16
 218:	8f 9f       	mul	r24, r31
 21a:	c0 01       	movw	r24, r0
 21c:	11 24       	eor	r1, r1
 21e:	95 95       	asr	r25
 220:	87 95       	ror	r24
 222:	95 95       	asr	r25
 224:	87 95       	ror	r24
 226:	95 95       	asr	r25
 228:	87 95       	ror	r24
 22a:	88 b9       	out	0x08, r24	; 8
 22c:	8b b1       	in	r24, 0x0b	; 11
 22e:	84 60       	ori	r24, 0x04	; 4
 230:	8b b9       	out	0x0b, r24	; 11
 232:	22 e0       	ldi	r18, 0x02	; 2
 234:	2a 95       	dec	r18
 236:	f1 f7       	brne	.-4      	; 0x234 <lcdCommand+0x5e>
 238:	00 c0       	rjmp	.+0      	; 0x23a <lcdCommand+0x64>
 23a:	8b b1       	in	r24, 0x0b	; 11
 23c:	8b 7f       	andi	r24, 0xFB	; 251
 23e:	8b b9       	out	0x0b, r24	; 11
 240:	87 ec       	ldi	r24, 0xC7	; 199
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	01 97       	sbiw	r24, 0x01	; 1
 246:	f1 f7       	brne	.-4      	; 0x244 <lcdCommand+0x6e>
 248:	00 c0       	rjmp	.+0      	; 0x24a <lcdCommand+0x74>
 24a:	00 00       	nop
 24c:	08 95       	ret

0000024e <lcdData>:
 24e:	28 2f       	mov	r18, r24
 250:	20 7f       	andi	r18, 0xF0	; 240
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	35 95       	asr	r19
 256:	27 95       	ror	r18
 258:	35 95       	asr	r19
 25a:	27 95       	ror	r18
 25c:	35 95       	asr	r19
 25e:	27 95       	ror	r18
 260:	28 b9       	out	0x08, r18	; 8
 262:	9b b1       	in	r25, 0x0b	; 11
 264:	91 60       	ori	r25, 0x01	; 1
 266:	9b b9       	out	0x0b, r25	; 11
 268:	9b b1       	in	r25, 0x0b	; 11
 26a:	9d 7f       	andi	r25, 0xFD	; 253
 26c:	9b b9       	out	0x0b, r25	; 11
 26e:	9b b1       	in	r25, 0x0b	; 11
 270:	94 60       	ori	r25, 0x04	; 4
 272:	9b b9       	out	0x0b, r25	; 11
 274:	22 e0       	ldi	r18, 0x02	; 2
 276:	2a 95       	dec	r18
 278:	f1 f7       	brne	.-4      	; 0x276 <lcdData+0x28>
 27a:	00 c0       	rjmp	.+0      	; 0x27c <lcdData+0x2e>
 27c:	9b b1       	in	r25, 0x0b	; 11
 27e:	9b 7f       	andi	r25, 0xFB	; 251
 280:	9b b9       	out	0x0b, r25	; 11
 282:	20 e1       	ldi	r18, 0x10	; 16
 284:	82 9f       	mul	r24, r18
 286:	c0 01       	movw	r24, r0
 288:	11 24       	eor	r1, r1
 28a:	95 95       	asr	r25
 28c:	87 95       	ror	r24
 28e:	95 95       	asr	r25
 290:	87 95       	ror	r24
 292:	95 95       	asr	r25
 294:	87 95       	ror	r24
 296:	88 b9       	out	0x08, r24	; 8
 298:	8b b1       	in	r24, 0x0b	; 11
 29a:	84 60       	ori	r24, 0x04	; 4
 29c:	8b b9       	out	0x0b, r24	; 11
 29e:	82 e0       	ldi	r24, 0x02	; 2
 2a0:	8a 95       	dec	r24
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <lcdData+0x52>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <lcdData+0x58>
 2a6:	8b b1       	in	r24, 0x0b	; 11
 2a8:	8b 7f       	andi	r24, 0xFB	; 251
 2aa:	8b b9       	out	0x0b, r24	; 11
 2ac:	87 ec       	ldi	r24, 0xC7	; 199
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	01 97       	sbiw	r24, 0x01	; 1
 2b2:	f1 f7       	brne	.-4      	; 0x2b0 <lcdData+0x62>
 2b4:	00 c0       	rjmp	.+0      	; 0x2b6 <lcdData+0x68>
 2b6:	00 00       	nop
 2b8:	08 95       	ret

000002ba <lcdInit>:
 2ba:	8f ef       	ldi	r24, 0xFF	; 255
 2bc:	87 b9       	out	0x07, r24	; 7
 2be:	8a b9       	out	0x0a, r24	; 10
 2c0:	8b b1       	in	r24, 0x0b	; 11
 2c2:	8b 7f       	andi	r24, 0xFB	; 251
 2c4:	8b b9       	out	0x0b, r24	; 11
 2c6:	83 e3       	ldi	r24, 0x33	; 51
 2c8:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcdCommand>
 2cc:	82 e3       	ldi	r24, 0x32	; 50
 2ce:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcdCommand>
 2d2:	88 e2       	ldi	r24, 0x28	; 40
 2d4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcdCommand>
 2d8:	8e e0       	ldi	r24, 0x0E	; 14
 2da:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcdCommand>
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcdCommand>
 2e4:	8f e9       	ldi	r24, 0x9F	; 159
 2e6:	9f e0       	ldi	r25, 0x0F	; 15
 2e8:	01 97       	sbiw	r24, 0x01	; 1
 2ea:	f1 f7       	brne	.-4      	; 0x2e8 <lcdInit+0x2e>
 2ec:	00 c0       	rjmp	.+0      	; 0x2ee <lcdInit+0x34>
 2ee:	00 00       	nop
 2f0:	86 e0       	ldi	r24, 0x06	; 6
 2f2:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcdCommand>
 2f6:	08 95       	ret

000002f8 <lcdGotoXY>:
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	00 d0       	rcall	.+0      	; 0x2fe <lcdGotoXY+0x6>
 2fe:	cd b7       	in	r28, 0x3d	; 61
 300:	de b7       	in	r29, 0x3e	; 62
 302:	90 e8       	ldi	r25, 0x80	; 128
 304:	99 83       	std	Y+1, r25	; 0x01
 306:	90 ec       	ldi	r25, 0xC0	; 192
 308:	9a 83       	std	Y+2, r25	; 0x02
 30a:	e6 2f       	mov	r30, r22
 30c:	f0 e0       	ldi	r31, 0x00	; 0
 30e:	31 97       	sbiw	r30, 0x01	; 1
 310:	21 e0       	ldi	r18, 0x01	; 1
 312:	30 e0       	ldi	r19, 0x00	; 0
 314:	2c 0f       	add	r18, r28
 316:	3d 1f       	adc	r19, r29
 318:	e2 0f       	add	r30, r18
 31a:	f3 1f       	adc	r31, r19
 31c:	90 81       	ld	r25, Z
 31e:	89 0f       	add	r24, r25
 320:	81 50       	subi	r24, 0x01	; 1
 322:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcdCommand>
 326:	87 ec       	ldi	r24, 0xC7	; 199
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	01 97       	sbiw	r24, 0x01	; 1
 32c:	f1 f7       	brne	.-4      	; 0x32a <lcdGotoXY+0x32>
 32e:	00 c0       	rjmp	.+0      	; 0x330 <lcdGotoXY+0x38>
 330:	00 00       	nop
 332:	0f 90       	pop	r0
 334:	0f 90       	pop	r0
 336:	df 91       	pop	r29
 338:	cf 91       	pop	r28
 33a:	08 95       	ret

0000033c <lcdPrintChar>:
 33c:	0e 94 27 01 	call	0x24e	; 0x24e <lcdData>
 340:	08 95       	ret

00000342 <keypadInit>:
 342:	8f e0       	ldi	r24, 0x0F	; 15
 344:	84 b9       	out	0x04, r24	; 4
 346:	80 ef       	ldi	r24, 0xF0	; 240
 348:	85 b9       	out	0x05, r24	; 5
 34a:	08 95       	ret

0000034c <isKeypress>:
 34c:	2f ef       	ldi	r18, 0xFF	; 255
 34e:	81 ee       	ldi	r24, 0xE1	; 225
 350:	94 e0       	ldi	r25, 0x04	; 4
 352:	21 50       	subi	r18, 0x01	; 1
 354:	80 40       	sbci	r24, 0x00	; 0
 356:	90 40       	sbci	r25, 0x00	; 0
 358:	e1 f7       	brne	.-8      	; 0x352 <isKeypress+0x6>
 35a:	00 c0       	rjmp	.+0      	; 0x35c <isKeypress+0x10>
 35c:	00 00       	nop
 35e:	80 ef       	ldi	r24, 0xF0	; 240
 360:	85 b9       	out	0x05, r24	; 5
 362:	83 b1       	in	r24, 0x03	; 3
 364:	80 7f       	andi	r24, 0xF0	; 240
 366:	80 3f       	cpi	r24, 0xF0	; 240
 368:	19 f4       	brne	.+6      	; 0x370 <isKeypress+0x24>
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	08 95       	ret
 370:	08 95       	ret

00000372 <getKey>:
 372:	cf 93       	push	r28
 374:	df 93       	push	r29
 376:	cd b7       	in	r28, 0x3d	; 61
 378:	de b7       	in	r29, 0x3e	; 62
 37a:	60 97       	sbiw	r28, 0x10	; 16
 37c:	0f b6       	in	r0, 0x3f	; 63
 37e:	f8 94       	cli
 380:	de bf       	out	0x3e, r29	; 62
 382:	0f be       	out	0x3f, r0	; 63
 384:	cd bf       	out	0x3d, r28	; 61
 386:	80 e1       	ldi	r24, 0x10	; 16
 388:	e2 e0       	ldi	r30, 0x02	; 2
 38a:	f1 e0       	ldi	r31, 0x01	; 1
 38c:	de 01       	movw	r26, r28
 38e:	11 96       	adiw	r26, 0x01	; 1
 390:	01 90       	ld	r0, Z+
 392:	0d 92       	st	X+, r0
 394:	8a 95       	dec	r24
 396:	e1 f7       	brne	.-8      	; 0x390 <getKey+0x1e>
 398:	60 e0       	ldi	r22, 0x00	; 0
 39a:	70 e0       	ldi	r23, 0x00	; 0
 39c:	52 c0       	rjmp	.+164    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 39e:	80 ef       	ldi	r24, 0xF0	; 240
 3a0:	85 b9       	out	0x05, r24	; 5
 3a2:	20 e0       	ldi	r18, 0x00	; 0
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	0d c0       	rjmp	.+26     	; 0x3c2 <getKey+0x50>
 3a8:	45 b1       	in	r20, 0x05	; 5
 3aa:	81 e0       	ldi	r24, 0x01	; 1
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	02 2e       	mov	r0, r18
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <getKey+0x44>
 3b2:	88 0f       	add	r24, r24
 3b4:	99 1f       	adc	r25, r25
 3b6:	0a 94       	dec	r0
 3b8:	e2 f7       	brpl	.-8      	; 0x3b2 <getKey+0x40>
 3ba:	84 2b       	or	r24, r20
 3bc:	85 b9       	out	0x05, r24	; 5
 3be:	2f 5f       	subi	r18, 0xFF	; 255
 3c0:	3f 4f       	sbci	r19, 0xFF	; 255
 3c2:	26 17       	cp	r18, r22
 3c4:	37 07       	cpc	r19, r23
 3c6:	84 f3       	brlt	.-32     	; 0x3a8 <getKey+0x36>
 3c8:	fb 01       	movw	r30, r22
 3ca:	31 96       	adiw	r30, 0x01	; 1
 3cc:	9f 01       	movw	r18, r30
 3ce:	0d c0       	rjmp	.+26     	; 0x3ea <getKey+0x78>
 3d0:	45 b1       	in	r20, 0x05	; 5
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	02 2e       	mov	r0, r18
 3d8:	02 c0       	rjmp	.+4      	; 0x3de <getKey+0x6c>
 3da:	88 0f       	add	r24, r24
 3dc:	99 1f       	adc	r25, r25
 3de:	0a 94       	dec	r0
 3e0:	e2 f7       	brpl	.-8      	; 0x3da <getKey+0x68>
 3e2:	84 2b       	or	r24, r20
 3e4:	85 b9       	out	0x05, r24	; 5
 3e6:	2f 5f       	subi	r18, 0xFF	; 255
 3e8:	3f 4f       	sbci	r19, 0xFF	; 255
 3ea:	24 30       	cpi	r18, 0x04	; 4
 3ec:	31 05       	cpc	r19, r1
 3ee:	84 f3       	brlt	.-32     	; 0x3d0 <getKey+0x5e>
 3f0:	83 b1       	in	r24, 0x03	; 3
 3f2:	48 2f       	mov	r20, r24
 3f4:	50 e0       	ldi	r21, 0x00	; 0
 3f6:	80 7f       	andi	r24, 0xF0	; 240
 3f8:	80 3f       	cpi	r24, 0xF0	; 240
 3fa:	e9 f4       	brne	.+58     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 3fc:	bf 01       	movw	r22, r30
 3fe:	21 c0       	rjmp	.+66     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 400:	9a 01       	movw	r18, r20
 402:	08 2e       	mov	r0, r24
 404:	02 c0       	rjmp	.+4      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 406:	35 95       	asr	r19
 408:	27 95       	ror	r18
 40a:	0a 94       	dec	r0
 40c:	e2 f7       	brpl	.-8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 40e:	20 ff       	sbrs	r18, 0
 410:	02 c0       	rjmp	.+4      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 412:	01 96       	adiw	r24, 0x01	; 1
 414:	12 c0       	rjmp	.+36     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 416:	04 97       	sbiw	r24, 0x04	; 4
 418:	88 0f       	add	r24, r24
 41a:	99 1f       	adc	r25, r25
 41c:	88 0f       	add	r24, r24
 41e:	99 1f       	adc	r25, r25
 420:	21 e0       	ldi	r18, 0x01	; 1
 422:	30 e0       	ldi	r19, 0x00	; 0
 424:	2c 0f       	add	r18, r28
 426:	3d 1f       	adc	r19, r29
 428:	82 0f       	add	r24, r18
 42a:	93 1f       	adc	r25, r19
 42c:	fc 01       	movw	r30, r24
 42e:	e6 0f       	add	r30, r22
 430:	f7 1f       	adc	r31, r23
 432:	80 81       	ld	r24, Z
 434:	0a c0       	rjmp	.+20     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 436:	84 e0       	ldi	r24, 0x04	; 4
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	88 30       	cpi	r24, 0x08	; 8
 43c:	91 05       	cpc	r25, r1
 43e:	04 f3       	brlt	.-64     	; 0x400 <__EEPROM_REGION_LENGTH__>
 440:	bf 01       	movw	r22, r30
 442:	64 30       	cpi	r22, 0x04	; 4
 444:	71 05       	cpc	r23, r1
 446:	0c f4       	brge	.+2      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 448:	aa cf       	rjmp	.-172    	; 0x39e <getKey+0x2c>
 44a:	60 96       	adiw	r28, 0x10	; 16
 44c:	0f b6       	in	r0, 0x3f	; 63
 44e:	f8 94       	cli
 450:	de bf       	out	0x3e, r29	; 62
 452:	0f be       	out	0x3f, r0	; 63
 454:	cd bf       	out	0x3d, r28	; 61
 456:	df 91       	pop	r29
 458:	cf 91       	pop	r28
 45a:	08 95       	ret

0000045c <main>:

int i=2;

int main(void)
{
	keypadInit();
 45c:	0e 94 a1 01 	call	0x342	; 0x342 <keypadInit>
	lcdInit();
 460:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcdInit>
    while (1) 
    {
		if (isKeypress())
 464:	0e 94 a6 01 	call	0x34c	; 0x34c <isKeypress>
 468:	89 2b       	or	r24, r25
 46a:	e1 f3       	breq	.-8      	; 0x464 <main+0x8>
		{
			lcdPrintChar(getKey());
 46c:	0e 94 b9 01 	call	0x372	; 0x372 <getKey>
 470:	0e 94 9e 01 	call	0x33c	; 0x33c <lcdPrintChar>
			lcdGotoXY(i,1);
 474:	61 e0       	ldi	r22, 0x01	; 1
 476:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 47a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcdGotoXY>
			i++;		
 47e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 482:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 486:	01 96       	adiw	r24, 0x01	; 1
 488:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 48c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 490:	e9 cf       	rjmp	.-46     	; 0x464 <main+0x8>

00000492 <__fixunssfsi>:
 492:	0e 94 bd 02 	call	0x57a	; 0x57a <__fp_splitA>
 496:	88 f0       	brcs	.+34     	; 0x4ba <__fixunssfsi+0x28>
 498:	9f 57       	subi	r25, 0x7F	; 127
 49a:	98 f0       	brcs	.+38     	; 0x4c2 <__fixunssfsi+0x30>
 49c:	b9 2f       	mov	r27, r25
 49e:	99 27       	eor	r25, r25
 4a0:	b7 51       	subi	r27, 0x17	; 23
 4a2:	b0 f0       	brcs	.+44     	; 0x4d0 <__fixunssfsi+0x3e>
 4a4:	e1 f0       	breq	.+56     	; 0x4de <__fixunssfsi+0x4c>
 4a6:	66 0f       	add	r22, r22
 4a8:	77 1f       	adc	r23, r23
 4aa:	88 1f       	adc	r24, r24
 4ac:	99 1f       	adc	r25, r25
 4ae:	1a f0       	brmi	.+6      	; 0x4b6 <__fixunssfsi+0x24>
 4b0:	ba 95       	dec	r27
 4b2:	c9 f7       	brne	.-14     	; 0x4a6 <__fixunssfsi+0x14>
 4b4:	14 c0       	rjmp	.+40     	; 0x4de <__fixunssfsi+0x4c>
 4b6:	b1 30       	cpi	r27, 0x01	; 1
 4b8:	91 f0       	breq	.+36     	; 0x4de <__fixunssfsi+0x4c>
 4ba:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__fp_zero>
 4be:	b1 e0       	ldi	r27, 0x01	; 1
 4c0:	08 95       	ret
 4c2:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <__fp_zero>
 4c6:	67 2f       	mov	r22, r23
 4c8:	78 2f       	mov	r23, r24
 4ca:	88 27       	eor	r24, r24
 4cc:	b8 5f       	subi	r27, 0xF8	; 248
 4ce:	39 f0       	breq	.+14     	; 0x4de <__fixunssfsi+0x4c>
 4d0:	b9 3f       	cpi	r27, 0xF9	; 249
 4d2:	cc f3       	brlt	.-14     	; 0x4c6 <__fixunssfsi+0x34>
 4d4:	86 95       	lsr	r24
 4d6:	77 95       	ror	r23
 4d8:	67 95       	ror	r22
 4da:	b3 95       	inc	r27
 4dc:	d9 f7       	brne	.-10     	; 0x4d4 <__fixunssfsi+0x42>
 4de:	3e f4       	brtc	.+14     	; 0x4ee <__fixunssfsi+0x5c>
 4e0:	90 95       	com	r25
 4e2:	80 95       	com	r24
 4e4:	70 95       	com	r23
 4e6:	61 95       	neg	r22
 4e8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ea:	8f 4f       	sbci	r24, 0xFF	; 255
 4ec:	9f 4f       	sbci	r25, 0xFF	; 255
 4ee:	08 95       	ret

000004f0 <__floatunsisf>:
 4f0:	e8 94       	clt
 4f2:	09 c0       	rjmp	.+18     	; 0x506 <__floatsisf+0x12>

000004f4 <__floatsisf>:
 4f4:	97 fb       	bst	r25, 7
 4f6:	3e f4       	brtc	.+14     	; 0x506 <__floatsisf+0x12>
 4f8:	90 95       	com	r25
 4fa:	80 95       	com	r24
 4fc:	70 95       	com	r23
 4fe:	61 95       	neg	r22
 500:	7f 4f       	sbci	r23, 0xFF	; 255
 502:	8f 4f       	sbci	r24, 0xFF	; 255
 504:	9f 4f       	sbci	r25, 0xFF	; 255
 506:	99 23       	and	r25, r25
 508:	a9 f0       	breq	.+42     	; 0x534 <__floatsisf+0x40>
 50a:	f9 2f       	mov	r31, r25
 50c:	96 e9       	ldi	r25, 0x96	; 150
 50e:	bb 27       	eor	r27, r27
 510:	93 95       	inc	r25
 512:	f6 95       	lsr	r31
 514:	87 95       	ror	r24
 516:	77 95       	ror	r23
 518:	67 95       	ror	r22
 51a:	b7 95       	ror	r27
 51c:	f1 11       	cpse	r31, r1
 51e:	f8 cf       	rjmp	.-16     	; 0x510 <__floatsisf+0x1c>
 520:	fa f4       	brpl	.+62     	; 0x560 <__floatsisf+0x6c>
 522:	bb 0f       	add	r27, r27
 524:	11 f4       	brne	.+4      	; 0x52a <__floatsisf+0x36>
 526:	60 ff       	sbrs	r22, 0
 528:	1b c0       	rjmp	.+54     	; 0x560 <__floatsisf+0x6c>
 52a:	6f 5f       	subi	r22, 0xFF	; 255
 52c:	7f 4f       	sbci	r23, 0xFF	; 255
 52e:	8f 4f       	sbci	r24, 0xFF	; 255
 530:	9f 4f       	sbci	r25, 0xFF	; 255
 532:	16 c0       	rjmp	.+44     	; 0x560 <__floatsisf+0x6c>
 534:	88 23       	and	r24, r24
 536:	11 f0       	breq	.+4      	; 0x53c <__floatsisf+0x48>
 538:	96 e9       	ldi	r25, 0x96	; 150
 53a:	11 c0       	rjmp	.+34     	; 0x55e <__floatsisf+0x6a>
 53c:	77 23       	and	r23, r23
 53e:	21 f0       	breq	.+8      	; 0x548 <__floatsisf+0x54>
 540:	9e e8       	ldi	r25, 0x8E	; 142
 542:	87 2f       	mov	r24, r23
 544:	76 2f       	mov	r23, r22
 546:	05 c0       	rjmp	.+10     	; 0x552 <__floatsisf+0x5e>
 548:	66 23       	and	r22, r22
 54a:	71 f0       	breq	.+28     	; 0x568 <__floatsisf+0x74>
 54c:	96 e8       	ldi	r25, 0x86	; 134
 54e:	86 2f       	mov	r24, r22
 550:	70 e0       	ldi	r23, 0x00	; 0
 552:	60 e0       	ldi	r22, 0x00	; 0
 554:	2a f0       	brmi	.+10     	; 0x560 <__floatsisf+0x6c>
 556:	9a 95       	dec	r25
 558:	66 0f       	add	r22, r22
 55a:	77 1f       	adc	r23, r23
 55c:	88 1f       	adc	r24, r24
 55e:	da f7       	brpl	.-10     	; 0x556 <__floatsisf+0x62>
 560:	88 0f       	add	r24, r24
 562:	96 95       	lsr	r25
 564:	87 95       	ror	r24
 566:	97 f9       	bld	r25, 7
 568:	08 95       	ret

0000056a <__fp_split3>:
 56a:	57 fd       	sbrc	r21, 7
 56c:	90 58       	subi	r25, 0x80	; 128
 56e:	44 0f       	add	r20, r20
 570:	55 1f       	adc	r21, r21
 572:	59 f0       	breq	.+22     	; 0x58a <__fp_splitA+0x10>
 574:	5f 3f       	cpi	r21, 0xFF	; 255
 576:	71 f0       	breq	.+28     	; 0x594 <__fp_splitA+0x1a>
 578:	47 95       	ror	r20

0000057a <__fp_splitA>:
 57a:	88 0f       	add	r24, r24
 57c:	97 fb       	bst	r25, 7
 57e:	99 1f       	adc	r25, r25
 580:	61 f0       	breq	.+24     	; 0x59a <__fp_splitA+0x20>
 582:	9f 3f       	cpi	r25, 0xFF	; 255
 584:	79 f0       	breq	.+30     	; 0x5a4 <__fp_splitA+0x2a>
 586:	87 95       	ror	r24
 588:	08 95       	ret
 58a:	12 16       	cp	r1, r18
 58c:	13 06       	cpc	r1, r19
 58e:	14 06       	cpc	r1, r20
 590:	55 1f       	adc	r21, r21
 592:	f2 cf       	rjmp	.-28     	; 0x578 <__fp_split3+0xe>
 594:	46 95       	lsr	r20
 596:	f1 df       	rcall	.-30     	; 0x57a <__fp_splitA>
 598:	08 c0       	rjmp	.+16     	; 0x5aa <__fp_splitA+0x30>
 59a:	16 16       	cp	r1, r22
 59c:	17 06       	cpc	r1, r23
 59e:	18 06       	cpc	r1, r24
 5a0:	99 1f       	adc	r25, r25
 5a2:	f1 cf       	rjmp	.-30     	; 0x586 <__fp_splitA+0xc>
 5a4:	86 95       	lsr	r24
 5a6:	71 05       	cpc	r23, r1
 5a8:	61 05       	cpc	r22, r1
 5aa:	08 94       	sec
 5ac:	08 95       	ret

000005ae <__fp_zero>:
 5ae:	e8 94       	clt

000005b0 <__fp_szero>:
 5b0:	bb 27       	eor	r27, r27
 5b2:	66 27       	eor	r22, r22
 5b4:	77 27       	eor	r23, r23
 5b6:	cb 01       	movw	r24, r22
 5b8:	97 f9       	bld	r25, 7
 5ba:	08 95       	ret

000005bc <_exit>:
 5bc:	f8 94       	cli

000005be <__stop_program>:
 5be:	ff cf       	rjmp	.-2      	; 0x5be <__stop_program>
